<CONFIG>
	NAME BLLClassCodeProtected
	CATEGORY BLL
	NODE Entity
	TOPLEVEL False
</CONFIG>
<CONTENT>
<%%=USEPROTECTEDAREAS true%%>
<%%=PROTECTEDAREASTART "#region protected"%%>
<%%=PROTECTEDAREAEND "#endregion protected"%%>
<%%=USEIGNOREDAREAS true%%>
<%%=IGNOREDAREASTART "<CreatedByUserName>"%%>
<%%=IGNOREDAREAEND "</CreatedDate>"%%><%%-
/*<copyright>

</copyright>*/
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Text;
using BLL = %%><%%=Project.Namespace%%><%%-.BLL;

namespace %%><%%=Project.Namespace%%><%%-.BLL.%%><%%=FeatureName%%><%%-
{
	///--------------------------------------------------------------------------------
	/// <summary>This class is used to manage information and business rules for
	/// specific %%><%%=EntityName%%><%%- instances.</summary>
	///
	/// This file is code generated and should not be modified by hand.
	/// If you need to customize, change the Status value below to something
	/// other than Generated to prevent changes from being overwritten.
	///
	/// <CreatedByUserName>%%><%%=USER%%><%%-</CreatedByUserName>
	/// <CreatedDate>%%><%%=NOW%%><%%-</CreatedDate>
	/// <Status>Generated</Status>
	///--------------------------------------------------------------------------------
	[Serializable()]
	[XmlRoot(Namespace="", ElementName="%%><%%=EntityName%%><%%-")]
	[DataContract]
	[GeneratedCode(" ", "")]
	public partial class %%><%%=EntityName%%><%%- : BusinessObjectBase
	{
		#region "Fields and Properties"%%>
		<%%:
		foreach (Property)
		{
		<%%-
		
		protected %%><%%=BLLDataType%%><%%- %%><%%=PropertyName.UnderscoreCase()%%><%%- = %%><%%=BLLDefaultValue%%><%%-;
		///--------------------------------------------------------------------------------
		/// <summary>This property gets or sets the %%><%%=PropertyName%%><%%-.</summary>
		///--------------------------------------------------------------------------------
		[XmlElement()]
		[DataMember]
		[DefaultValue(%%><%%=BLLDefaultConstantValue%%><%%-)]
		public virtual %%><%%=BLLDataType%%><%%- %%><%%=PropertyName%%><%%-
		{
			get
			{
				return %%><%%=PropertyName.UnderscoreCase()%%><%%-;
			}
			set
			{
				if (%%><%%=PropertyName.UnderscoreCase()%%><%%- != value)
				{
					%%><%%=PropertyName.UnderscoreCase()%%><%%- = value;
					IsModified = true;
				}
			}
		}%%>
		}
		%%><%%-
		#endregion "Fields and Properties"
		
		// put your custom code inside this region!!
		#region protected
		#endregion protected
		
		#region "Constructors"
		
		///--------------------------------------------------------------------------------
		/// <summary>The default constructor (for reflection, etc.).</summary>
		///--------------------------------------------------------------------------------
		public %%><%%=EntityName%%><%%-(){}
		
		///--------------------------------------------------------------------------------
		/// <summary>This constructor creates a business logic %%><%%=EntityName%%><%%- instance
		/// with primary key properties individually.</summary>
		///%%>
		<%%:
		foreach (Property where IsPrimaryKeyMember == true)
		{
		<%%-
		/// <param name="%%><%%=PropertyName.CamelCase()%%><%%-">The input value for %%><%%=PropertyName%%><%%-.</param>%%>
		}
		%%><%%-
		///--------------------------------------------------------------------------------
		public %%><%%=EntityName%%><%%-(%%>
		<%%:
		foreach (Property where IsPrimaryKeyMember == true)
		{
			if (ItemIndex > 0)
			{
			<%%-, %%>
			}
		<%%=BLLDataType%%><%%- %%><%%=PropertyName.CamelCase()%%>
		}
		%%><%%-)
		{%%>
		<%%:
		foreach (Property where IsPrimaryKeyMember == true)
		{
		<%%-
			%%><%%=PropertyName%%><%%- = %%><%%=PropertyName.CamelCase()%%><%%-;%%>
		}
		%%><%%-
		}
		#endregion "Constructors"
	}
}%%></CONTENT><OUTPUT>
<%%:
if (File(BLLClassFilePath) == null || (File(BLLClassFilePath).Contains("<Status>Generated</Status>") == true
    && File(BLLClassFilePath).FilterIgnored().FilterProtected()
          != Text.FilterIgnored().FilterProtected()
    ))
{
	update(BLLClassFilePath)
}
%%></OUTPUT>