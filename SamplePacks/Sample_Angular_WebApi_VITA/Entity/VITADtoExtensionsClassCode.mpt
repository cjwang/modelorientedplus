<CONFIG>
	NAME VITADtoExtensionsClassCode
	CATEGORY VITA
	NODE Entity
	TOPLEVEL False
</CONFIG>
<CONTENT>
//
// Use this template to create Dto helper methods to transfer
// information to/from corresponding data managed by VITA.
//
<%%=USETABS true%%>
<%%=TAB -100%%>
<%%:
<%%-/*<copyright>
%%>
<%%=Solution.Copyright%%><%%-
</copyright>*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Vita.Common;
using Vita.Entities;
using %%><%%=Project.Namespace%%><%%-.Models;

namespace %%><%%=Project.Namespace%%><%%-.Dtos%%>
<%%=Solution.OPEN_BRACE%%><%%-
	//------------------------------------------------------------------------------
	/// <summary>This class defines an extension for transferring %%><%%=VITAInterfaceName%%><%%-
	/// data object instances into corresponding %%><%%=VITADtoClassName%%><%%- data transfer object instances.</summary>
	///
	/// This file is code generated and should not be modified by hand.
	/// If you need to customize outside of protected areas, add those changes
	/// in another partial interface file.  As a last resort (if generated code needs
	/// to be different), change the Status value below to something other than
	/// Generated to prevent changes from being overwritten.
	///
	/// <CreatedByUserName>%%><%%=USER%%><%%-</CreatedByUserName>
	/// <CreatedDate>%%><%%=NOW%%><%%-</CreatedDate>
	/// <Status>Generated</Status>
	//------------------------------------------------------------------------------
	public static partial class %%><%%=VITADtoExtensionsClassName%%>
	<%%=Solution.OPEN_BRACE%%>
		<%%=Solution.NEWLINE%%>
		<%%-///--------------------------------------------------------------------------------
		/// <summary>Transform an instance of %%><%%=VITAInterfaceName%%><%%- to a %%><%%=VITADtoClassName%%><%%- dto instance.</summary>
		///
		/// <returns>An instance of %%><%%=VITADtoClassName%%><%%-.</returns>
		/// <param name="%%><%%=VITAClassName.CamelCase()%%><%%-">The %%><%%=VITAInterfaceName%%><%%- instance to transform.</param>
		/// <param name="getExpandedData">Flag to get expanded data such as (shallow) references and collections.</param>
		///--------------------------------------------------------------------------------
		public static %%><%%=VITADtoClassName%%><%%- ToDto(this %%><%%=VITAInterfaceName%%><%%- %%><%%=VITAClassName.CamelCase()%%><%%-, bool getExpandedData = false)%%>
		<%%=Solution.OPEN_BRACE%%>
			<%%=Solution.NEWLINE%%>
			var propertyName = VITADtoClassName.CamelCase()
			<%%-var %%><%%=propertyName%%><%%- = new %%><%%=VITADtoClassName%%><%%-()%%>
			<%%=Solution.OPEN_BRACE%%>
			var baseEntityPath = ""
				foreach (Entity in EntityAndBaseEntities)
				{
					if (ItemIndex > 0)
					{
						baseEntityPath = baseEntityPath + "." + VITAClassName
					}
					foreach (Property where VITAIsDtoClassProperty == true && VITAIsReferenceProperty == false)
					{
						<%%=Solution.NEWLINE%%>
						<%%=VITAPropertyName%%><%%- = %%><%%=../../VITAClassName.CamelCase()%%><%%=baseEntityPath%%><%%-.%%><%%=VITAPropertyPath%%><%%-,%%>
					}
				}
				if (VITAIsPrimaryUserEntity == true)
				{
					<%%=Solution.NEWLINE%%>
					<%%-Type = %%><%%=VITAClassName.CamelCase()%%><%%-.Type,%%>
				}
				if (VITAHasFullNameProperty == true)
				{
					<%%=Solution.NEWLINE%%>
					<%%-FullName = %%><%%=VITAClassName.CamelCase()%%><%%-.FullName,%%>
				}
				<%%=Solution.NEWLINE%%>
				<%%-CanEdit = true,%%>
				<%%=Solution.NEWLINE%%>
				<%%-CanDelete = true%%>
			<%%=Solution.CLOSE_BRACE%%>
			<%%-;%%>
			baseEntityPath = ""
			foreach (Entity in EntityAndBaseEntities)
			{
				if (ItemIndex > 0)
				{
					baseEntityPath = baseEntityPath + "." + VITAClassName
				}
				foreach (EntityReference where IsPrimaryReference == true)
				{
					<%%=Solution.NEWLINE%%>
					<%%-if (%%><%%=../../VITAClassName.CamelCase()%%><%%=baseEntityPath%%><%%-.%%><%%=VITAPropertyName%%><%%- != null)%%>
					<%%=Solution.OPEN_BRACE%%>
						<%%=Solution.NEWLINE%%>
						<%%=propertyName%%><%%-.%%><%%=VITAPropertyPropertyName%%><%%- = %%><%%=../../VITAClassName.CamelCase()%%><%%=baseEntityPath%%><%%-.%%><%%=VITAPropertyName%%><%%-.%%><%%=VITAPrimaryKeyPropertyPath%%><%%-;%%>
						<%%=Solution.NEWLINE%%>
						<%%=propertyName%%><%%-.%%><%%=VITADerivedPropertyName%%><%%- = %%><%%=../../VITAClassName.CamelCase()%%><%%=baseEntityPath%%><%%-.%%><%%=VITAPropertyName%%><%%-.%%><%%=ReferencedEntity.VITAPrimaryNameProperty%%><%%-;%%>
					<%%=Solution.CLOSE_BRACE%%>
				}
			}

			if (Solution.VITA_ADD_LOGIN_MODULE == true)
			{
				<%%=Solution.NEWLINE%%>
				<%%-var permissions = EntityHelper.GetEntityAccess(%%><%%=VITAClassName.CamelCase()%%><%%-);
				%%><%%=propertyName%%><%%-.CanEdit = permissions.CanUpdate();
				%%><%%=propertyName%%><%%-.CanDelete = permissions.CanDelete();%%>
			}
			<%%-
			if (getExpandedData == true)%%>
			<%%=Solution.OPEN_BRACE%%>
				baseEntityPath = ""
				foreach (Entity in EntityAndBaseEntities)
				{
					if (ItemIndex > 0)
					{
						baseEntityPath = baseEntityPath + "." + VITAClassName
					}
					foreach (Collection where IsPrimaryCollection == true)
					{
						<%%=Solution.NEWLINE%%>
						<%%=propertyName%%><%%-.%%><%%=VITAPropertyName%%><%%- = %%><%%=../../VITAClassName.CamelCase()%%><%%=baseEntityPath%%><%%-.%%><%%=VITAPropertyName%%><%%-.Select(a => a.ToDto(false)).ToList();%%>
					}
				}
				baseEntityPath = ""
				foreach (Entity in EntityAndBaseEntities)
				{
					if (ItemIndex > 0)
					{
						baseEntityPath = baseEntityPath + "." + VITAClassName
					}
					foreach (EntityReference where IsPrimaryReference == true)
					{
						<%%=Solution.NEWLINE%%>
						<%%-if (%%><%%=../../VITAClassName.CamelCase()%%><%%=baseEntityPath%%><%%-.%%><%%=VITAPropertyName%%><%%- != null)%%>
						<%%=Solution.OPEN_BRACE%%>
							<%%=Solution.NEWLINE%%>
							<%%=propertyName%%><%%-.%%><%%=VITAPropertyName%%><%%- = %%><%%=../../VITAClassName.CamelCase()%%><%%=baseEntityPath%%><%%-.%%><%%=VITAPropertyName%%><%%-.ToDto(false);%%>
						<%%=Solution.CLOSE_BRACE%%>
					}
				}											
			<%%=Solution.CLOSE_BRACE%%>
			<%%=Solution.NEWLINE%%>
			<%%-return %%><%%=VITADtoClassName.CamelCase()%%><%%-;%%>
		<%%=Solution.CLOSE_BRACE%%>
	<%%=Solution.CLOSE_BRACE%%>
<%%=Solution.CLOSE_BRACE%%>
%%></CONTENT><OUTPUT>
<%%:
if (Solution.ShouldUpdateFile(path=VITADtoExtensionsClassFilePath, text=Text) == true)
{
	update(VITADtoExtensionsClassFilePath)
}
%%></OUTPUT>