<CONFIG>
	NAME VITADSDtoClassCode
	CATEGORY VITADS
	NODE Entity
	TOPLEVEL False
</CONFIG>
<CONTENT>
//
// Use this template to create a data transfer object for your entity, a concrete class used to transfer
// information to/from corresponding data managed by VITA.
//
<%%=USETABS true%%>
<%%=TAB -100%%>
<%%:
<%%-/*<copyright>
%%>
<%%=Solution.Copyright%%><%%-
</copyright>*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Vita.Common;
using Vita.Entities;%%>
with (Project)
{
	if (ProjectReferenceCount > 1)
	{
		// get a project tagged as BLL
		foreach (Project where Tags.Contains("BLL") == true)
		{
    <%%-
using %%><%%=Namespace%%><%%-;
using %%><%%=Namespace%%><%%-.Models;%%>
		}
	}
	else
	{
		foreach (Project)
		{
    <%%-
using %%><%%=Namespace%%><%%-;
using %%><%%=Namespace%%><%%-.Models;%%>
		}
	}
}
<%%-

namespace %%><%%=Project.Namespace%%><%%-.Dtos%%>
<%%=Solution.OPEN_BRACE%%><%%-
	//------------------------------------------------------------------------------
	/// <summary>This class defines the key elements of the %%><%%=VITADSDtoClassName%%><%%-
	/// data transfer object, and associated methods for validation.</summary>
	///
	/// This file is code generated and should not be modified by hand.
	/// If you need to customize outside of protected areas, add those changes
	/// in another partial class file.  As a last resort (if generated code needs
	/// to be different), change the Status value below to something other than
	/// Generated to prevent changes from being overwritten.
	///
	/// <CreatedByUserName>%%><%%=USER%%><%%-</CreatedByUserName>
	/// <CreatedDate>%%><%%=NOW%%><%%-</CreatedDate>
	/// <Status>Generated</Status>
	//------------------------------------------------------------------------------
	public partial class %%><%%=VITADSDtoClassName%%>
	<%%=Solution.OPEN_BRACE%%>
		var firstItem
		foreach (Entity in EntityAndBaseEntities)
		{
			foreach (Property where VITADSIsDtoClassProperty == true)
			{
				if (firstItem == false)
				{
					<%%=Solution.NEWLINE%%>
				}
				firstItem = false
				<%%=VITADSDtoPropertyCode%%>
			}
		}
		if (VITAIsPrimaryUserEntity == true)
		{
			<%%=Solution.NEWLINE%%>
			<%%=Solution.NEWLINE%%>
			<%%-public UserType Type { get; set; }%%>
		}
		foreach (Entity in EntityAndBaseEntities)
		{
			foreach (Collection where IsPrimaryCollection == true)
			{
				<%%=Solution.NEWLINE%%>
				<%%=VITADSDtoPropertyCode%%>
			}
		}
		foreach (Entity in EntityAndBaseEntities)
		{
			foreach (EntityReference where IsPrimaryReference == true)
			{
				<%%=Solution.NEWLINE%%>
				<%%=VITADSDtoPropertyCode%%>
				<%%=Solution.NEWLINE%%>
				<%%=VITADSDtoDerivedPropertyCode%%>
			}
		}
		<%%=Solution.NEWLINE%%>
		<%%=Solution.NEWLINE%%>
		<%%-public bool CanEdit { get; set; }%%>
		<%%=Solution.NEWLINE%%>
		<%%=Solution.NEWLINE%%>
		<%%-public bool CanDelete { get; set; }%%>
		<%%=Solution.NEWLINE%%>
		<%%=Solution.NEWLINE%%>
		<%%-///--------------------------------------------------------------------------------
		/// <summary>Check the %%><%%=VITADSDtoClassName%%><%%- dto instance for validation errors.</summary>
		///
		/// <param name="context">The operation context to track validation issues.</param>
		///--------------------------------------------------------------------------------
		public void Validate(OperationContext context)%%>
		<%%=Solution.OPEN_BRACE%%>
			foreach (Entity in EntityAndBaseEntities)
			{
				foreach (Property where VITADSIsValidationProperty == true)
				{
					<%%=VITADsValidationBlurb%%>
				}
			}
			<%%=Solution.NEWLINE%%>
			<%%=Solution.NEWLINE%%>
			<%%-// put custom validation rules here
			#region protected
			#endregion protected%%>
		<%%=Solution.CLOSE_BRACE%%>
	<%%=Solution.CLOSE_BRACE%%>
<%%=Solution.CLOSE_BRACE%%>
%%></CONTENT><OUTPUT>
<%%:
if (Solution.ShouldUpdateFile(path=VITADSDtoClassFilePath, text=Text) == true)
{
	update(VITADSDtoClassFilePath)
}
%%></OUTPUT>