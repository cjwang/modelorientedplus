<CONFIG>
	NAME VITAUIUnityWebApiActivatorClassCode
	CATEGORY VITAUI
	NODE Project
	TOPLEVEL False
</CONFIG>
<CONTENT>
<%%=USETABS true%%>
<%%:
<%%-/*<copyright>
%%>
<%%=Solution.Copyright%%><%%-
</copyright>*/
using System.Web.Http;
using Microsoft.Practices.Unity.WebApi;

[assembly: WebActivatorEx.PreApplicationStartMethod(typeof(%%><%%=Namespace%%><%%-.App_Start.UnityWebApiActivator), "Start")]
[assembly: WebActivatorEx.ApplicationShutdownMethod(typeof(%%><%%=Namespace%%><%%-.App_Start.UnityWebApiActivator), "Shutdown")]

namespace %%><%%=Project.Namespace%%><%%-.App_Start%%>
<%%=Solution.OPEN_BRACE%%><%%-
	//------------------------------------------------------------------------------
	/// <summary>Provides the bootstrapping for integrating Unity with WebApi when it is hosted in ASP.NET.</summary>
	///
	/// This file is code generated and should not be modified by hand.
	/// If you need to customize outside of protected areas, add those changes
	/// in another partial class file.  As a last resort (if generated code needs
	/// to be different), change the Status value below to something other than
	/// Generated to prevent changes from being overwritten.
	///
	/// <CreatedByUserName>%%><%%=USER%%><%%-</CreatedByUserName>
	/// <CreatedDate>%%><%%=NOW%%><%%-</CreatedDate>
	/// <Status>Generated</Status>
	//------------------------------------------------------------------------------
	public static class UnityWebApiActivator%%>
	<%%=Solution.OPEN_BRACE%%>
		<%%=Solution.NEWLINE%%>
		<%%-/// <summary>Integrates Unity when the application starts.</summary>
		public static void Start()%%>
		<%%=Solution.OPEN_BRACE%%>
			<%%=Solution.NEWLINE%%>
			<%%-// Use UnityHierarchicalDependencyResolver if you want to use a new child container for each IHttpController resolution.
			// var resolver = new UnityHierarchicalDependencyResolver(UnityConfig.GetConfiguredContainer());
			var resolver = new UnityDependencyResolver(UnityConfig.GetConfiguredContainer());
			
			GlobalConfiguration.Configuration.DependencyResolver = resolver;%%>
		<%%=Solution.CLOSE_BRACE%%>
		
		<%%=Solution.NEWLINE%%>
		<%%=Solution.NEWLINE%%>
		<%%-/// <summary>Disposes the Unity container when the application is shut down.</summary>
		public static void Shutdown()%%>
		<%%=Solution.OPEN_BRACE%%>
			<%%=Solution.NEWLINE%%>
			<%%-var container = UnityConfig.GetConfiguredContainer();
			container.Dispose();%%>
		<%%=Solution.CLOSE_BRACE%%>
		<%%=Solution.NEWLINE%%>
		
	<%%=Solution.CLOSE_BRACE%%>
<%%=Solution.CLOSE_BRACE%%>
%%></CONTENT><OUTPUT>
<%%:
if (Solution.ShouldUpdateFile(path=VITAUIUnityWebApiActivatorClassFilePath, text=Text) == true)
{
	update(VITAUIUnityWebApiActivatorClassFilePath)
}
%%></OUTPUT>