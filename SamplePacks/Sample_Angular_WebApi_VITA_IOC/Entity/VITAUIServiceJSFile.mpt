<CONFIG>
	NAME VITAUIServiceJSFile
	CATEGORY VITAUI
	NODE Entity
	TOPLEVEL False
</CONFIG>
<CONTENT>
//
// Use this template to create an AngularJS service for your entity.  This service
// manages the web api calls to manage the CRUD, search, and other related
// operations with your entity.
//
<%%=USETABS true%%>
<%%:
<%%-/*<copyright>
%%>
<%%=Solution.Copyright%%>
var firstItem
<%%-
</copyright>*/

//------------------------------------------------------------------------------
/// <summary>This service enables CRUD operations on the data store for
/// %%><%%=VITAInterfaceName%%><%%- items via Web Api calls.</summary>
///
/// This file is code generated and should not be modified by hand.
/// If you need to customize outside of protected areas, add those changes
/// in another partial class file.  As a last resort (if generated code needs
/// to be different), change the Status value below to something other than
/// Generated to prevent changes from being overwritten.
///
/// <CreatedByUserName>%%><%%=USER%%><%%-</CreatedByUserName>
/// <CreatedDate>%%><%%=NOW%%><%%-</CreatedDate>
/// <Status>Generated</Status>
//------------------------------------------------------------------------------
var %%><%%=VITAUIServiceName%%><%%- = function ($http, $q)%%>
<%%=Solution.OPEN_BRACE(js=true)%%>
	//
	// search
	//
	<%%-
	this.search%%><%%=LIBPluralEntityName%%><%%- = function (%%>
	firstItem = true
	foreach (Entity in EntityAndBaseEntities)
	{
		foreach (Property where VITADSIsQueryProperty == true)
		{
			if (firstItem != true)
			{
				<%%-, %%>
			}
			firstItem = false
			switch (DataTypeCode)
			{
				case 24: // DateTime
				case 29: // DateTimeSmall
					<%%=VITAParameterName%%><%%-Start,%%><%%=VITAParameterName%%><%%-End%%>
					break
				default:
					<%%=VITAParameterName%%>
					break
			}
		}
	}
	if (firstItem != true)
	{
		<%%-, %%>
	}
	<%%-orderBy, decending, page, pageSize)%%>
	<%%=Solution.OPEN_BRACE(js=true)%%>
		<%%-
		var deferredObject = $q.defer();
		var results =%%>
		<%%=Solution.OPEN_BRACE(js=true)%%>
			<%%-
			isSuccess: true,
			message: '',
			items: null,
			totalItems: 0,
			canCreate: true%%>
		<%%=Solution.CLOSE_BRACE%%>
		<%%-
		var searchQuery =%%>
		<%%=Solution.OPEN_BRACE(js=true)%%>
			foreach (Entity in EntityAndBaseEntities)
			{
				foreach (Property where VITADSIsQueryProperty == true)
				{
					switch (DataTypeCode)
					{
						case 24: // DateTime
						case 29: // DateTimeSmall
							<%%=Solution.NEWLINE%%>
							<%%=VITAPropertyName%%><%%-Start: %%><%%=VITAParameterName%%><%%-Start,%%>
							<%%=Solution.NEWLINE%%>
							<%%=VITAPropertyName%%><%%-End: %%><%%=VITAParameterName%%><%%-End,%%>
							break
						default:
							<%%=Solution.NEWLINE%%>
							<%%=VITAPropertyName%%><%%-: %%><%%=VITAParameterName%%><%%-,%%>
							break
					}
				}
			}
			<%%=Solution.NEWLINE%%>
			<%%-OrderBy: orderBy,%%>
			<%%=Solution.NEWLINE%%>
			<%%-Descending: decending,%%>
			<%%=Solution.NEWLINE%%>
			<%%-Skip: (page - 1) * pageSize,%%>
			<%%=Solution.NEWLINE%%>
			<%%-Take: pageSize%%>
		<%%=Solution.CLOSE_BRACE%%><%%-;
		if (searchQuery.Skip < 0) searchQuery.Skip = 0;
		
		$http.get('/api/%%><%%=VITADSApiRoute%%><%%-', { params: searchQuery }).%%><%%=Solution.INDENT%%><%%-
			success(function (data)%%>
			<%%=Solution.OPEN_BRACE(js=true)%%>
				<%%-
				results.items = data.Items;
				results.totalItems = data.TotalItems;
				results.canCreate = data.CanCreate;
				deferredObject.resolve(results);%%>
			<%%=Solution.CLOSE_BRACE%%>
			<%%-).
			error(function (data, status, headers, config)%%>
			<%%=Solution.OPEN_BRACE(js=true)%%>
				<%%-
				results.isSuccess = false;
				results.message = 'Could not search for %%><%%=VITAClassName%%><%%- items: ';
				if (typeof data == "string")%%>
				<%%=Solution.OPEN_BRACE(js=true)%%>
					<%%-
					results.message = results.message + ' ' + data;%%>
				<%%=Solution.CLOSE_BRACE%%><%%- else%%>
				<%%=Solution.OPEN_BRACE(js=true)%%>
					<%%-
					for (var i = 0; i < data.length; i++)%%>
					<%%=Solution.OPEN_BRACE(js=true)%%>
						<%%-
						results.message = results.message + ' ' + data[i].Message;%%>
					<%%=Solution.CLOSE_BRACE%%>
				<%%=Solution.CLOSE_BRACE%%><%%-
				deferredObject.resolve(results);%%>
			<%%=Solution.CLOSE_BRACE%%>
			<%%-);%%><%%=Solution.OUTDENT%%><%%-
		
		return deferredObject.promise;%%>
	<%%=Solution.CLOSE_BRACE%%><%%-;
	%%>
	//
	// get
	//
	<%%-
	this.get%%><%%=VITAClassName%%><%%- = function (%%>
	foreach (Property where IsPrimaryKeyMember == true)
	{
		if (ItemIndex > 0)
		{
			<%%-, %%>
		}
		<%%=VITAParameterName%%>
	}
	<%%-)%%>
	<%%=Solution.OPEN_BRACE(js=true)%%>
		<%%-
		var deferredObject = $q.defer();
		var results =%%>
		<%%=Solution.OPEN_BRACE(js=true)%%>
			<%%-
			isSuccess: true,
			message: '',
			data: null%%>
		<%%=Solution.CLOSE_BRACE%%>
		<%%-
		
		$http.get('/api/%%><%%=VITADSApiRoute%%><%%-/%%>
		if (PrimaryKeyCount > 1)
		{
			<%%-get', { params: { %%>
			foreach (Property where IsPrimaryKeyMember == true)
			{
				if (ItemIndex > 0)
				{
					<%%-, %%>
				}
				<%%=VITAPropertyName.ToLower()%%><%%-: %%><%%=VITAParameterName%%>
			}
			<%%- } }%%>
		}
		else
		{
			<%%-'%%>
			foreach (Property where IsPrimaryKeyMember == true)
			{
				<%%- + %%><%%=VITAParameterName%%>
				break
			}
		}
		<%%-).%%><%%=Solution.INDENT%%><%%-
			success(function (data)%%>
			<%%=Solution.OPEN_BRACE(js=true)%%>
				<%%-
				results.data = data;
				deferredObject.resolve(results);%%>
			<%%=Solution.CLOSE_BRACE%%>
			<%%-).
			error(function (data, status, headers, config)%%>
			<%%=Solution.OPEN_BRACE(js=true)%%>
				<%%-
				results.isSuccess = false;
				results.message = 'Could not get %%><%%=VITAClassName%%><%%- item:';
				if (typeof data == "string")%%>
				<%%=Solution.OPEN_BRACE(js=true)%%>
					<%%-
					results.message = results.message + ' ' + data;%%>
				<%%=Solution.CLOSE_BRACE%%><%%- else%%>
				<%%=Solution.OPEN_BRACE(js=true)%%>
					<%%-
					for (var i = 0; i < data.length; i++)%%>
					<%%=Solution.OPEN_BRACE(js=true)%%>
						<%%-
						results.message = results.message + ' ' + data[i].Message;%%>
					<%%=Solution.CLOSE_BRACE%%>
				<%%=Solution.CLOSE_BRACE%%><%%-
				deferredObject.resolve(results);%%>
			<%%=Solution.CLOSE_BRACE%%>
			<%%-);%%><%%=Solution.OUTDENT%%><%%-
		
		return deferredObject.promise;%%>
	<%%=Solution.CLOSE_BRACE%%><%%-;
	%%>
	//
	// get collection
	//
	<%%-
	this.list%%><%%=VITAClassName%%><%%- = function (%%>
	foreach (Property where IsPrimaryKeyMember == true)
	{
		if (ItemIndex > 0)
		{
			<%%-, %%>
		}
		<%%=VITAParameterName%%>
	}
	<%%-)%%>
	<%%=Solution.OPEN_BRACE(js=true)%%>
		<%%-
		var deferredObject = $q.defer();
		var results =%%>
		<%%=Solution.OPEN_BRACE(js=true)%%>
			<%%-
			isSuccess: true,
			message: '',
			data: null%%>
		<%%=Solution.CLOSE_BRACE%%>
		foreach (Property where IsPrimaryKeyMember == true && IsStringProperty == true)
		{
			<%%-
			if (%%><%%=VITAParameterName%%><%%- == '')%%>
			<%%=Solution.OPEN_BRACE(js=true)%%>
				<%%-
				%%><%%=VITAParameterName%%><%%- = 'nnn'; // TODO: find cause of deserialization bug if string is blank%%>
			<%%=Solution.CLOSE_BRACE%%>
		}
		<%%-
		
		$http.get('/api/%%><%%=VITADSApiRoute%%><%%-/list', { params: { take: 100%%>
		foreach (Property where IsPrimaryKeyMember == true)
		{
			<%%-, %%><%%=VITAPropertyName.ToLower()%%><%%-: %%><%%=VITAParameterName%%>
		}
		<%%- } }).%%><%%=Solution.INDENT%%><%%-
			success(function (data)%%>
			<%%=Solution.OPEN_BRACE(js=true)%%>
				<%%-
				results.data = data;
				deferredObject.resolve(results);%%>
			<%%=Solution.CLOSE_BRACE%%>
			<%%-).
			error(function (data, status, headers, config)%%>
			<%%=Solution.OPEN_BRACE(js=true)%%>
				<%%-
				results.isSuccess = false;
				results.message = 'Could not get %%><%%=VITAClassName%%><%%- list:';
				if (typeof data == "string")%%>
				<%%=Solution.OPEN_BRACE(js=true)%%>
					<%%-
					results.message = results.message + ' ' + data;%%>
				<%%=Solution.CLOSE_BRACE%%><%%- else%%>
				<%%=Solution.OPEN_BRACE(js=true)%%>
					<%%-
					for (var i = 0; i < data.length; i++)%%>
					<%%=Solution.OPEN_BRACE(js=true)%%>
						<%%-
						results.message = results.message + ' ' + data[i].Message;%%>
					<%%=Solution.CLOSE_BRACE%%>
				<%%=Solution.CLOSE_BRACE%%><%%-
				deferredObject.resolve(results);%%>
			<%%=Solution.CLOSE_BRACE%%>
			<%%-);%%><%%=Solution.OUTDENT%%><%%-
		
		return deferredObject.promise;%%>
	<%%=Solution.CLOSE_BRACE%%><%%-;
	%%>
	//
	// create
	//
	<%%-
	this.create%%><%%=VITAClassName%%><%%- = function (%%>
	firstItem = true
	foreach (Entity in EntityAndBaseEntities)
	{
		foreach (Property where IsCreateProperty == true)
		{
			if (firstItem != true)
			{
				<%%-, %%>
			}
			firstItem = false
			<%%=VITAParameterName%%>
		}
	}
	<%%-)%%>
	<%%=Solution.OPEN_BRACE(js=true)%%>
		<%%-
		var deferredObject = $q.defer();
		var results =%%>
		<%%=Solution.OPEN_BRACE(js=true)%%>
			<%%-
			isSuccess: true,
			message: '',
			data: null%%>
		<%%=Solution.CLOSE_BRACE%%>
		<%%-
		var itemData =%%>
		<%%=Solution.OPEN_BRACE(js=true)%%>
			firstItem = true
			foreach (Entity in EntityAndBaseEntities)
			{
				foreach (Property where IsCreateProperty == true)
				{
					if (firstItem == false)
					{
						<%%-, %%>
					}
					firstItem = false
					<%%=Solution.NEWLINE%%>
					<%%=VITAPropertyName%%><%%-: %%><%%=VITAParameterName%%>
				}
			}
		<%%=Solution.CLOSE_BRACE%%><%%-;
		
		$http.post('/api/%%><%%=VITADSApiRoute%%><%%-', itemData).%%><%%=Solution.INDENT%%><%%-
			success(function (data)%%>
			<%%=Solution.OPEN_BRACE(js=true)%%>
				<%%-
				results.data = data;
				deferredObject.resolve(results);%%>
			<%%=Solution.CLOSE_BRACE%%>
			<%%-).
			error(function (data, status, headers, config)%%>
			<%%=Solution.OPEN_BRACE(js=true)%%>
				<%%-
				results.isSuccess = false;
				results.message = 'Could not create %%><%%=VITAClassName%%><%%- item:';
				if (typeof data == "string")%%>
				<%%=Solution.OPEN_BRACE(js=true)%%>
					<%%-
					results.message = results.message + ' ' + data;%%>
				<%%=Solution.CLOSE_BRACE%%><%%- else%%>
				<%%=Solution.OPEN_BRACE(js=true)%%>
					<%%-
					for (var i = 0; i < data.length; i++)%%>
					<%%=Solution.OPEN_BRACE(js=true)%%>
						<%%-
						results.message = results.message + ' ' + data[i].Message;%%>
					<%%=Solution.CLOSE_BRACE%%>
				<%%=Solution.CLOSE_BRACE%%><%%-
				deferredObject.resolve(results);%%>
			<%%=Solution.CLOSE_BRACE%%>
			<%%-);%%><%%=Solution.OUTDENT%%><%%-
		
		return deferredObject.promise;%%>
	<%%=Solution.CLOSE_BRACE%%><%%-;
	%%>
	//
	// update
	//
	<%%-
	this.update%%><%%=VITAClassName%%><%%- = function (%%>
	firstItem = true
	foreach (Entity in EntityAndBaseEntities)
	{
		foreach (Property where VITADSIsDtoClassProperty == true)
		{
			if (firstItem != true)
			{
				<%%-, %%>
			}
			firstItem = false
			<%%=VITAParameterName%%>
		}
	}
	<%%-)%%>
	<%%=Solution.OPEN_BRACE(js=true)%%>
		<%%-
		var deferredObject = $q.defer();
		var results =%%>
		<%%=Solution.OPEN_BRACE(js=true)%%>
			<%%-
			isSuccess: true,
			message: '',
			data: null%%>
		<%%=Solution.CLOSE_BRACE%%>
		<%%-
		var itemData =%%>
		<%%=Solution.OPEN_BRACE(js=true)%%>
			firstItem = true
			foreach (Entity in EntityAndBaseEntities)
			{
				foreach (Property where VITADSIsDtoClassProperty == true)
				{
					if (firstItem == false)
					{
						<%%-, %%>
					}
					firstItem = false
					<%%=Solution.NEWLINE%%>
					<%%=VITAPropertyName%%><%%-: %%><%%=VITAParameterName%%>
				}
			}
		<%%=Solution.CLOSE_BRACE%%><%%-;
		
		$http.put('/api/%%><%%=VITADSApiRoute%%><%%-', itemData).%%><%%=Solution.INDENT%%><%%-
			success(function (data)%%>
			<%%=Solution.OPEN_BRACE(js=true)%%>
				<%%-
				results.data = data;
				deferredObject.resolve(results);%%>
			<%%=Solution.CLOSE_BRACE%%>
			<%%-).
			error(function (data, status, headers, config)%%>
			<%%=Solution.OPEN_BRACE(js=true)%%>
				<%%-
				results.isSuccess = false;
				results.message = 'Could not update %%><%%=VITAClassName%%><%%- item:';
				if (typeof data == "string")%%>
				<%%=Solution.OPEN_BRACE(js=true)%%>
					<%%-
					results.message = results.message + ' ' + data;%%>
				<%%=Solution.CLOSE_BRACE%%><%%- else%%>
				<%%=Solution.OPEN_BRACE(js=true)%%>
					<%%-
					for (var i = 0; i < data.length; i++)%%>
					<%%=Solution.OPEN_BRACE(js=true)%%>
						<%%-
						results.message = results.message + ' ' + data[i].Message;%%>
					<%%=Solution.CLOSE_BRACE%%>
				<%%=Solution.CLOSE_BRACE%%><%%-
				deferredObject.resolve(results);%%>
			<%%=Solution.CLOSE_BRACE%%>
			<%%-);%%><%%=Solution.OUTDENT%%><%%-
		
		return deferredObject.promise;%%>
	<%%=Solution.CLOSE_BRACE%%><%%-;
	%%>
	//
	// delete
	//
	<%%-
	this.delete%%><%%=VITAClassName%%><%%- = function (%%>
	foreach (Property where IsPrimaryKeyMember == true)
	{
		if (ItemIndex > 0)
		{
			<%%-, %%>
		}
		<%%=VITAParameterName%%>
	}
	<%%-)%%>
	<%%=Solution.OPEN_BRACE(js=true)%%>
		<%%-
		var deferredObject = $q.defer();
		var results =%%>
		<%%=Solution.OPEN_BRACE(js=true)%%>
			<%%-
			isSuccess: true,
			message: '',
			data: null%%>
		<%%=Solution.CLOSE_BRACE%%>
		<%%-
		
		$http.delete('/api/%%><%%=VITADSApiRoute%%><%%-/%%>
		if (PrimaryKeyCount > 1)
		{
			<%%-', { params: { %%>
			foreach (Property where IsPrimaryKeyMember == true)
			{
				if (ItemIndex > 0)
				{
					<%%-, %%>
				}
				<%%=VITAPropertyName.ToLower()%%><%%-: %%><%%=VITAParameterName%%>
			}
			<%%- } }%%>
		}
		else
		{
			<%%-'%%>
			foreach (Property where IsPrimaryKeyMember == true)
			{
				<%%- + %%><%%=VITAParameterName%%>
				break
			}
		}
		<%%-).%%><%%=Solution.INDENT%%><%%-
			success(function (data)%%>
			<%%=Solution.OPEN_BRACE(js=true)%%>
				<%%-
				results.data = data;
				deferredObject.resolve(results);%%>
			<%%=Solution.CLOSE_BRACE%%>
			<%%-).
			error(function (data, status, headers, config)%%>
			<%%=Solution.OPEN_BRACE(js=true)%%>
				<%%-
				results.isSuccess = false;
				results.message = 'Could not delete %%><%%=VITAClassName%%><%%- item:';
				if (typeof data == "string")%%>
				<%%=Solution.OPEN_BRACE(js=true)%%>
					<%%-
					results.message = results.message + ' ' + data;%%>
				<%%=Solution.CLOSE_BRACE%%><%%- else%%>
				<%%=Solution.OPEN_BRACE(js=true)%%>
					<%%-
					for (var i = 0; i < data.length; i++)%%>
					<%%=Solution.OPEN_BRACE(js=true)%%>
						<%%-
						results.message = results.message + ' ' + data[i].Message;%%>
					<%%=Solution.CLOSE_BRACE%%>
				<%%=Solution.CLOSE_BRACE%%><%%-
				deferredObject.resolve(results);%%>
			<%%=Solution.CLOSE_BRACE%%>
			<%%-);%%><%%=Solution.OUTDENT%%><%%-
		
		return deferredObject.promise;%%>
	<%%=Solution.CLOSE_BRACE%%><%%-;%%>
<%%=Solution.CLOSE_BRACE%%>
<%%-

%%><%%=VITAUIServiceName%%><%%-.$inject = ['$http', '$q'];%%>
%%></CONTENT><OUTPUT>
<%%:
if (Solution.ShouldUpdateFile(path=VITAUIServiceJSFilePath, text=Text) == true)
{
	update(VITAUIServiceJSFilePath)
}
%%></OUTPUT>