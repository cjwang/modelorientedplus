<CONFIG>
	NAME WPFUISearchClassCode
	CATEGORY WPFUI
	NODE Entity
	TOPLEVEL False
</CONFIG>
<CONTENT>
<%%=USETABS false%%>
<%%:
<%%-/*<copyright>
%%>
<%%=Solution.Copyright%%><%%-
</copyright>*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Controls.Primitives;
using System.ComponentModel;%%>
with (Project)
{
	if (ProjectReferenceCount > 1)
	{
		// get a project tagged as VM
		foreach (Project where Tags.Contains("VM") == true)
		{
   <%%-
using %%><%%=Namespace%%><%%-;
using %%><%%=Namespace%%><%%-.%%><%%=../../FeatureName%%><%%-;%%>
		}
	}
	else
	{
		foreach (Project)
		{
    <%%-
using %%><%%=Namespace%%><%%-;
using %%><%%=Namespace%%><%%-.%%><%%=../../FeatureName%%><%%-;%%>
		}
	}
}
<%%-

namespace %%><%%=Project.Namespace%%><%%-.UserControls.%%><%%=FeatureName%%><%%-
{
	///--------------------------------------------------------------------------------
	/// <summary>Interaction logic for %%><%%=WPFUISearchMarkupFileName%%><%%-.</summary>
	///
	/// This file is code generated and should not be modified by hand.
	/// If you need to customize, change the Status value below to something
	/// other than Generated to prevent changes from being overwritten.
	///
	/// <CreatedByUserName>%%><%%=USER%%><%%-</CreatedByUserName>
	/// <CreatedDate>%%><%%=NOW%%><%%-</CreatedDate>
	/// <Status>Generated</Status>
	///--------------------------------------------------------------------------------
	public partial class %%><%%=WPFUISearchClassName%%><%%- : UIControl
	{
		public %%><%%=WPFUISearchClassName%%><%%-()
		{
			InitializeComponent();
		}

		private void DataGrid_MouseDown(object sender, MouseButtonEventArgs e)
		{
			if (DataContext is %%><%%=VMBLLViewPluralModelClassName%%><%%-)
			{
				%%><%%=VMBLLViewPluralModelClassName%%><%%- view = DataContext as %%><%%=VMBLLViewPluralModelClassName%%><%%-;
				DataGridColumnHeader column = VisualItemHelper.FindParent<DataGridColumnHeader>(e.OriginalSource as DependencyObject);
				if (column != null)
				{
					if (view.SortColumn == column.Column.Header.ToString())
					{
						if (view.SortDirection == ListSortDirection.Ascending)
						{
							view.SortDirection = ListSortDirection.Descending;
						}
						else
						{
							view.SortDirection = ListSortDirection.Ascending;
						}
					}
					else
					{
						view.SortColumn = column.Column.Header.ToString();
						view.SortDirection = ListSortDirection.Ascending;
					}
					view.Search();
				}
			}
		}

		private void Edit_Click(object sender, RoutedEventArgs e)
		{
			DataGridRow row = VisualItemHelper.FindParent<DataGridRow>(sender as DependencyObject);
			if (row != null && row.DataContext is %%><%%=VMBLLViewModelClassName%%><%%- && DataContext is %%><%%=VMBLLViewPluralModelClassName%%><%%-)
			{
				(DataContext as %%><%%=VMBLLViewPluralModelClassName%%><%%-).ProcessEdit%%><%%=BLLClassName%%><%%-Command(row.DataContext as %%><%%=VMBLLViewModelClassName%%><%%-);
			}
		}

		private void Delete_Click(object sender, RoutedEventArgs e)
		{
			if (MessageBox.Show("Do you want to delete this %%><%%=BLLClassName%%><%%-?", "Delete", MessageBoxButton.OKCancel) == MessageBoxResult.OK)
			{
				DataGridRow row = VisualItemHelper.FindParent<DataGridRow>(sender as DependencyObject);
				if (row != null && row.DataContext is %%><%%=VMBLLViewModelClassName%%><%%- && DataContext is %%><%%=VMBLLViewPluralModelClassName%%><%%-)
				{
					(DataContext as %%><%%=VMBLLViewPluralModelClassName%%><%%-).ProcessDelete%%><%%=BLLClassName%%><%%-Command(row.DataContext as %%><%%=VMBLLViewModelClassName%%><%%-);
				}
			}
		}
	}
}
%%>
%%></CONTENT><OUTPUT>
<%%:
if (File(WPFUISearchClassFilePath) == null || (File(WPFUISearchClassFilePath).Contains("<Status>Generated</Status>") == true && File(WPFUISearchClassFilePath).Filter("<CreatedByUserName>","</CreatedDate>") != Text.Filter("<CreatedByUserName>","</CreatedDate>")))
{
	update(WPFUISearchClassFilePath)
}
%%></OUTPUT>