<CONFIG>
	NAME DALClassMethodsCode
	CATEGORY DAL
	NODE Entity
	TOPLEVEL False
</CONFIG>
<CONTENT>
<%%=USETABS true%%>
<%%-
#region "Methods"%%><%%:
if (CollectionCount > 0)
{
	// add Add cascade method
	<%%-
	
	///--------------------------------------------------------------------------------
	/// <summary>This method is used to perform add cascade operations on an instance of %%><%%=EntityName%%><%%-.</summary>
	///
	/// <param name="item">The instance of %%><%%=EntityName%%><%%- to perform add cascade operation on.</param>
	/// <param name="cascadeDepth">The depth of performing operations relating to this instance.</param>
	/// <param name="dataAccessOptions">The data access options for tailoring data access behavior.</param>
	/// <param name="sqlDbManager">The database manager for managing the transaction.</param>
	///--------------------------------------------------------------------------------
	public static void Add%%><%%=EntityName%%><%%-CollectionItems(%%><%%=DALDataType%%><%%- item, int cascadeDepth, DataAccessOptions dataAccessOptions, SqlDbManager sqlDbManager)
	{%%><%%=TAB 1%%><%%-
		try
		{%%><%%=TAB 1%%>
		
		foreach (Collection)
		{
			if (HasExtendedCollectionItem == false)
			{
				with (ReferencedEntity)
				{
					foreach (Method where IsGetAllByForeignKeyMethod == true && IsRelatedToProperty == true limit 1)
					{
						<%%-
						#region "%%><%%=../../DALPropertyName%%><%%-"
						if (item.%%><%%=../../DALPropertyName%%><%%- != null)
						{%%><%%=TAB 1%%><%%-
							foreach (%%><%%=../DALDataType%%><%%- loop%%><%%=../DALClassName%%><%%- in item.%%><%%=../../DALPropertyName%%><%%-)
							{%%><%%=TAB 1%%><%%-
								// add collection item%%>
								foreach (Property in ../../Entity where IsAuditProperty == true)
								{
									with (AuditProperty from Solution.Find(PropertyName, PropertyName))
									{
										if (IsAddAuditProperty == true && IsValueGenerated == false)
										{
											<%%-
											loop%%><%%=../../../DALClassName%%><%%-.%%><%%=../DALPropertyName%%><%%- = item.%%><%%=../DALPropertyName%%><%%-;%%>
										}
									}
								}
			foreach (Parameter)
			{
				foreach (MethodRelationship in ../)
				{
					with (Relationship)
					{
						foreach (RelationshipProperty)
						{
							if (PropertyID == ../../../PropertyID)
							{
								with (Property from ../ReferencedEntity.Find(ReferencedPropertyID))
								{
										<%%-
										loop%%><%%=../../../../../../DALClassName%%><%%-.%%><%%=../../../../DALPropertyName%%><%%- = item.%%><%%=DALPropertyName%%><%%-;%%>
								}
							}
						}
					}
				}
			}
/*								foreach (Parameter)
								{
									with (Property from Solution.Find(PropertyID, PropertyID))
									{
										<%%-
										loop%%><%%=../../../DALClassName%%><%%-.%%><%%=../DALPropertyName%%><%%- = item.%%><%%=DALPropertyName%%><%%-;%%>
									}
								}
*/
								foreach (Method in Entity where IsAddOneMethod == true && IsPrimaryMethod == true limit 1)
								{
									<%%-
									%%><%%=../../FeatureName%%><%%-.%%><%%=Entity.DALClassName%%><%%-.%%><%%=DALMethodName%%><%%-(%%>
									<%%-loop%%><%%=../../DALClassName%%><%%-, %%>
									foreach (Parameter)
									{
										<%%=DALParameterName%%><%%-, %%>
									}
									<%%-cascadeDepth, dataAccessOptions, sqlDbManager);%%>
								}
							<%%=TAB -1%%><%%-
							}%%><%%=TAB -1%%><%%-
						}
						#endregion "%%><%%=../../DALPropertyName%%><%%-"
						%%>
					}
				}
			}
		}
		<%%=TAB -1%%><%%-
		}
		catch (ApplicationException ex)
		{%%><%%=TAB 1%%><%%-
			throw ex;%%><%%=TAB -1%%><%%-
		}
		catch (Exception ex)
		{%%><%%=TAB 1%%><%%-
			bool reThrow = DataAccessConfiguration.HandleException(ex);
			if (reThrow) throw;%%><%%=TAB -1%%><%%-
		}%%><%%=TAB -1%%><%%-
	}%%>

	// add Update cascade method
	<%%-
	
	///--------------------------------------------------------------------------------
	/// <summary>This method is used to perform update cascade operations on an instance of %%><%%=EntityName%%><%%-.</summary>
	///
	/// <param name="item">The instance of %%><%%=EntityName%%><%%- to perform add cascade operation on.</param>
	/// <param name="cascadeDepth">The depth of performing operations relating to this instance.</param>
	/// <param name="dataAccessOptions">The data access options for tailoring data access behavior.</param>
	/// <param name="sqlDbManager">The database manager for managing the transaction.</param>
	///--------------------------------------------------------------------------------
	public static void Update%%><%%=EntityName%%><%%-CollectionItems(%%><%%=DALDataType%%><%%- item, int cascadeDepth, DataAccessOptions dataAccessOptions, SqlDbManager sqlDbManager)
	{%%><%%=TAB 1%%><%%-
	try
	{%%><%%=TAB 1%%>
		
		foreach (Collection)
		{
			if (HasExtendedCollectionItem == false)
			{
				with (ReferencedEntity)
				{
					foreach (Method where IsGetAllByForeignKeyMethod == true && IsRelatedToProperty == true limit 1)
					{
						<%%-
						#region "%%><%%=../../DALPropertyName%%><%%-"
						if (item.%%><%%=../../DALPropertyName%%><%%- != null)
						{%%><%%=TAB 1%%><%%-
						%%>/* insert specific method type here...*/<%%-
							foreach (%%><%%=../DALDataType%%><%%- loop%%><%%=../DALClassName%%><%%- in item.%%><%%=../../DALPropertyName%%><%%-)
							{%%><%%=TAB 1%%><%%-
								if (loop%%><%%=../DALClassName%%><%%-.IsLoaded == false)
								{%%><%%=TAB 1%%><%%-
									// add collection item%%>
									foreach (Property in ../../Entity where IsAuditProperty == true)
									{
										with (AuditProperty from Solution.Find(PropertyName, PropertyName))
										{
											if (IsAddAuditProperty == true && IsValueGenerated == false)
											{
												<%%-
												loop%%><%%=../../../DALClassName%%><%%-.%%><%%=../DALPropertyName%%><%%- = item.%%><%%=../DALPropertyName%%><%%-;%%>
											}
										}
									}
			foreach (Parameter)
			{
				foreach (MethodRelationship in ../)
				{
					with (Relationship)
					{
						foreach (RelationshipProperty)
						{
							if (PropertyID == ../../../PropertyID)
							{
								with (Property from ../ReferencedEntity.Find(ReferencedPropertyID))
								{
										<%%-
										loop%%><%%=../../../../../../DALClassName%%><%%-.%%><%%=../../../../DALPropertyName%%><%%- = item.%%><%%=DALPropertyName%%><%%-;%%>
								}
							}
						}
					}
				}
			}
/*									foreach (Parameter)
									{
										with (Property from Solution.Find(PropertyID, PropertyID))
										{
											<%%-
											loop%%><%%=../../../DALClassName%%><%%-.%%><%%=../DALPropertyName%%><%%- = item.%%><%%=DALPropertyName%%><%%-;%%>
										}
									}
*/
									foreach (Method in Entity where IsAddOneMethod == true && IsPrimaryMethod == true limit 1)
									{
										<%%-
										%%><%%=../../FeatureName%%><%%-.%%><%%=Entity.DALClassName%%><%%-.%%><%%=DALMethodName%%><%%-(%%>
										<%%-loop%%><%%=../../DALClassName%%><%%-, %%>
										foreach (Parameter)
										{
											<%%=DALParameterName%%><%%-, %%>
										}
										<%%-cascadeDepth, dataAccessOptions, sqlDbManager);%%>
									}
								<%%=TAB -1%%><%%-
								}
								else
								{%%><%%=TAB 1%%><%%-
									// update collection item%%>
									foreach (Property in ../../Entity where IsAuditProperty == true)
									{
										with (AuditProperty from Solution.Find(PropertyName, PropertyName))
										{
											if (IsUpdateAuditProperty == true && IsValueGenerated == false)
											{
												<%%-
												loop%%><%%=../../../DALClassName%%><%%-.%%><%%=../DALPropertyName%%><%%- = item.%%><%%=../DALPropertyName%%><%%-;%%>
											}
										}
									}
			foreach (Parameter)
			{
				foreach (MethodRelationship in ../)
				{
					with (Relationship)
					{
						foreach (RelationshipProperty)
						{
							if (PropertyID == ../../../PropertyID)
							{
								with (Property from ../ReferencedEntity.Find(ReferencedPropertyID))
								{
										<%%-
										loop%%><%%=../../../../../../DALClassName%%><%%-.%%><%%=../../../../DALPropertyName%%><%%- = item.%%><%%=DALPropertyName%%><%%-;%%>
								}
							}
						}
					}
				}
			}
/*									foreach (Parameter)
									{
										with (Property from Solution.Find(PropertyID, PropertyID))
										{
											<%%-
											loop%%><%%=../../../DALClassName%%><%%-.%%><%%=../DALPropertyName%%><%%- = item.%%><%%=DALPropertyName%%><%%-;%%>
										}
									}
*/
									foreach (Method in Entity where IsUpdateOneMethod == true && IsPrimaryMethod == true limit 1)
									{
										<%%-
										%%><%%=../../FeatureName%%><%%-.%%><%%=Entity.DALClassName%%><%%-.%%><%%=DALMethodName%%><%%-(%%>
										<%%-loop%%><%%=../../DALClassName%%><%%-, %%>
										foreach (Parameter)
										{
											<%%=DALParameterName%%><%%-, %%>
										}
										<%%-cascadeDepth, dataAccessOptions, sqlDbManager);%%>
									}
									<%%=TAB -1%%><%%-
								}%%><%%=TAB -1%%><%%-
							}

							foreach (%%><%%=../DALDataType%%><%%- loop%%><%%=../DALClassName%%><%%- in %%>
							<%%=../FeatureName%%><%%-.%%><%%=Entity.DALClassName%%><%%-.%%><%%=DALMethodName%%><%%-(%%>
			foreach (Parameter)
			{
				foreach (MethodRelationship in ../)
				{
					with (Relationship)
					{
						foreach (RelationshipProperty)
						{
							if (PropertyID == ../../../PropertyID)
							{
								with (Property from ../ReferencedEntity.Find(ReferencedPropertyID))
								{
										<%%-item.%%><%%=DALPropertyName%%><%%-, %%>
								}
							}
						}
					}
				}
			}
/*							foreach (Parameter)
							{
								with (Property from Solution.Find(PropertyID, PropertyID))
								{
									<%%-item.%%><%%=DALPropertyName%%><%%-, %%>
								}
							}
*/
							<%%-cascadeDepth - 1, dataAccessOptions, sqlDbManager)%%>
							<%%-)
							{%%><%%=TAB 1%%><%%-
								if (item.%%><%%=../../DALPropertyName%%><%%-.Find("PrimaryKeyValues", loop%%><%%=../DALClassName%%><%%-.PrimaryKeyValues) == null)
								{%%><%%=TAB 1%%><%%-
									// delete collection item%%>
									foreach (Method in Entity where IsDeleteOneMethod == true && IsPrimaryMethod == true limit 1)
									{
										<%%-
										%%><%%=../../FeatureName%%><%%-.%%><%%=Entity.DALClassName%%><%%-.%%><%%=DALMethodName%%><%%-(%%>
										<%%-loop%%><%%=../../DALClassName%%><%%-, %%>
										foreach (Parameter)
										{
											<%%=DALParameterName%%><%%-, %%>
										}
										<%%-cascadeDepth, dataAccessOptions, sqlDbManager);%%>
									}
									<%%=TAB -1%%><%%-
								}%%><%%=TAB -1%%><%%-
							}%%><%%=TAB -1%%><%%-
						}
						#endregion "%%><%%=../../DALPropertyName%%><%%-"
						%%>
					}
				}
			}
		}
		<%%=TAB -1%%><%%-
		}
		catch (ApplicationException ex)
		{%%><%%=TAB 1%%><%%-
			throw ex;%%><%%=TAB -1%%><%%-
		}
		catch (Exception ex)
		{%%><%%=TAB 1%%><%%-
			bool reThrow = DataAccessConfiguration.HandleException(ex);
			if (reThrow) throw;%%><%%=TAB -1%%><%%-
		}%%><%%=TAB -1%%><%%-
	}%%>

	// add Delete cascade method
	<%%-
	
	///--------------------------------------------------------------------------------
	/// <summary>This method is used to perform delete cascade operations on an instance of %%><%%=EntityName%%><%%-.</summary>
	///
	/// <param name="item">The instance of %%><%%=EntityName%%><%%- to perform add cascade operation on.</param>
	/// <param name="cascadeDepth">The depth of performing operations relating to this instance.</param>
	/// <param name="dataAccessOptions">The data access options for tailoring data access behavior.</param>
	/// <param name="sqlDbManager">The database manager for managing the transaction.</param>
	///--------------------------------------------------------------------------------
	public static void Delete%%><%%=EntityName%%><%%-CollectionItems(%%><%%=DALDataType%%><%%- item, int cascadeDepth, DataAccessOptions dataAccessOptions, SqlDbManager sqlDbManager)
	{%%><%%=TAB 1%%><%%-
	try
	{%%><%%=TAB 1%%>
		
		foreach (Collection)
		{
			if (HasExtendedCollectionItem == false)
			{
				with (ReferencedEntity)
				{
					foreach (Method where IsGetAllByForeignKeyMethod == true && IsRelatedToProperty == true limit 1)
					{
						<%%-
						#region "%%><%%=../../DALPropertyName%%><%%-"
						if (item.%%><%%=../../DALPropertyName%%><%%- != null)
						{%%><%%=TAB 1%%>
							foreach (Method in Entity where IsDeleteAllByForeignKeyMethod == true && IsRelatedToProperty == true limit 1)
							{
								<%%-
								// delete collection items
								%%><%%=../../FeatureName%%><%%-.%%><%%=Entity.DALClassName%%><%%-.%%><%%=DALMethodName%%><%%-(%%>
			foreach (Parameter)
			{
				foreach (MethodRelationship in ../)
				{
					with (Relationship)
					{
						foreach (RelationshipProperty)
						{
							if (PropertyID == ../../../PropertyID)
							{
								with (Property from ../ReferencedEntity.Find(ReferencedPropertyID))
								{
										<%%-item.%%><%%=DALPropertyName%%><%%-, %%>
								}
							}
						}
					}
				}
			}
/*								foreach (Parameter)
								{
									with (Property from Solution.Find(PropertyID, PropertyID))
									{
										<%%-item.%%><%%=DALPropertyName%%><%%-, %%>
									}
								}
*/
								<%%-cascadeDepth - 1, dataAccessOptions, sqlDbManager);%%>
							}
						<%%=TAB -1%%><%%-
						}
						#endregion "%%><%%=../../DALPropertyName%%><%%-"
						%%>
					}
				}
			}
		}
		<%%=TAB -1%%><%%-
		}
		catch (ApplicationException ex)
		{%%><%%=TAB 1%%><%%-
			throw ex;%%><%%=TAB -1%%><%%-
		}
		catch (Exception ex)
		{%%><%%=TAB 1%%><%%-
			bool reThrow = DataAccessConfiguration.HandleException(ex);
			if (reThrow) throw;%%><%%=TAB -1%%><%%-
		}%%><%%=TAB -1%%><%%-
	}%%>

	// add Get cascade method
	<%%-
	
	///--------------------------------------------------------------------------------
	/// <summary>This method is used to perform get cascade operations on an instance of %%><%%=EntityName%%><%%-.</summary>
	///
	/// <param name="item">The instance of %%><%%=EntityName%%><%%- to perform add cascade operation on.</param>
	/// <param name="cascadeDepth">The depth of performing operations relating to this instance.</param>
	/// <param name="dataAccessOptions">The data access options for tailoring data access behavior.</param>
	/// <param name="sqlDbManager">The database manager for managing the transaction.</param>
	///--------------------------------------------------------------------------------
	public static void Get%%><%%=EntityName%%><%%-CollectionItems(%%><%%=DALDataType%%><%%- item, int cascadeDepth, DataAccessOptions dataAccessOptions, SqlDbManager sqlDbManager)
	{%%><%%=TAB 1%%><%%-
	try
	{%%><%%=TAB 1%%>
		
		foreach (Collection)
		{
			if (HasExtendedCollectionItem == false)
			{
				with (ReferencedEntity)
				{
					foreach (Method where IsGetAllByForeignKeyMethod == true && IsRelatedToProperty == true limit 1)
					{
						<%%-
						#region "%%><%%=../../DALPropertyName%%><%%-"%%>
							<%%-
							// get collection items
							%%><%%=../FeatureName%%><%%-.%%><%%=Entity.DALClassName%%><%%-.%%><%%=DALMethodName%%><%%-(%%>
			foreach (Parameter)
			{
				foreach (MethodRelationship in ../)
				{
					with (Relationship)
					{
						foreach (RelationshipProperty)
						{
							if (PropertyID == ../../../PropertyID)
							{
								with (Property from ../ReferencedEntity.Find(ReferencedPropertyID))
								{
										<%%-item.%%><%%=DALPropertyName%%><%%-, %%>
								}
							}
						}
					}
				}
			}
/*							foreach (Parameter)
							{
								with (Property from Solution.Find(PropertyID, PropertyID))
								{
									<%%-item.%%><%%=DALPropertyName%%><%%-, %%>
								}
							}
*/
							<%%-cascadeDepth - 1, dataAccessOptions, sqlDbManager);%%>
						<%%-
						#endregion "%%><%%=../../DALPropertyName%%><%%-"
						%%>
					}
				}
			}
		}
		<%%=TAB -1%%><%%-
		}
		catch (ApplicationException ex)
		{%%><%%=TAB 1%%><%%-
			throw ex;%%><%%=TAB -1%%><%%-
		}
		catch (Exception ex)
		{%%><%%=TAB 1%%><%%-
			bool reThrow = DataAccessConfiguration.HandleException(ex);
			if (reThrow) throw;%%><%%=TAB -1%%><%%-
		}%%><%%=TAB -1%%><%%-
	}%%>
}

// add metadata methods
foreach (Method)
{
	<%%=DALMethodCode%%>
}
%%>
<%%-

#endregion "Methods"%%></CONTENT>