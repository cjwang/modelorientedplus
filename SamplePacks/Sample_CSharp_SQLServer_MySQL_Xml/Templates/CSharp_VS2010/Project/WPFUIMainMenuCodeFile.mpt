<CONFIG>
	NAME WPFUIMainMenuCodeFile
	CATEGORY WPFUI
	NODE Project
	TOPLEVEL False
</CONFIG>
<CONTENT>
<%%=USETABS false%%>
<%%-/*<copyright>
%%>
<%%=Solution.Copyright%%><%%-
</copyright>*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace %%><%%=Namespace%%><%%-.UserControls
{
	///--------------------------------------------------------------------------------
	/// <summary>Interaction logic for MainMenu.xaml.</summary>
	///
	/// This library code was generated from a template.  Change the
	/// Status value below to something other than Generated if you have
	/// customized this file to prevent changes from being overwritten.
	///
	/// <CreatedByUserName>%%><%%=USER%%><%%-</CreatedByUserName>
	/// <CreatedDate>%%><%%=NOW%%><%%-</CreatedDate>
	/// <Status>Generated</Status>
	///--------------------------------------------------------------------------------
	public partial class MainMenu : UserControl
	{
		public MainMenu()
		{
			InitializeComponent();
		}

		///--------------------------------------------------------------------------------
		/// <summary>This method determines if the close command can execute.</summary>
		/// 
		/// <param name="sender">Sender of the event.</param>
		/// <param name="e">Event arguments.</param>
		///--------------------------------------------------------------------------------
		private void CloseCanExecute(object sender, CanExecuteRoutedEventArgs e)
		{
			e.CanExecute = true;
		}

		///--------------------------------------------------------------------------------
		/// <summary>This method executes the close command.</summary>
		/// 
		/// <param name="sender">Sender of the event.</param>
		/// <param name="e">Event arguments.</param>
		///--------------------------------------------------------------------------------
		private void CloseExecuted(object sender, ExecutedRoutedEventArgs e)
		{
			Application.Current.MainWindow.Close();
		}

		///--------------------------------------------------------------------------------
		/// <summary>This method determines if the help command can execute.</summary>
		/// 
		/// <param name="sender">Sender of the event.</param>
		/// <param name="e">Event arguments.</param>
		///--------------------------------------------------------------------------------
		private void HelpCanExecute(object sender, CanExecuteRoutedEventArgs e)
		{
			e.CanExecute = true;
		}

		///--------------------------------------------------------------------------------
		/// <summary>This method executes the help command.</summary>
		/// 
		/// <param name="sender">Sender of the event.</param>
		/// <param name="e">Event arguments.</param>
		///--------------------------------------------------------------------------------
		private void HelpExecuted(object sender, ExecutedRoutedEventArgs e)
		{
			MessageBox.Show("Help content is not available yet, sorry.", "Help Contents");
		}

		///--------------------------------------------------------------------------------
		/// <summary>This method determines if the help (about) command can execute.</summary>
		/// 
		/// <param name="sender">Sender of the event.</param>
		/// <param name="e">Event arguments.</param>
		///--------------------------------------------------------------------------------
		private void PropertiesCanExecute(object sender, CanExecuteRoutedEventArgs e)
		{
			e.CanExecute = true;
		}

		///--------------------------------------------------------------------------------
		/// <summary>This method executes the help (about) command.</summary>
		/// 
		/// <param name="sender">Sender of the event.</param>
		/// <param name="e">Event arguments.</param>
		///--------------------------------------------------------------------------------
		private void PropertiesExecuted(object sender, ExecutedRoutedEventArgs e)
		{
			MessageBox.Show("%%><%%=Solution.ProductName%%><%%- %%><%%=Solution.ProductVersion%%><%%- is a %%><%%=Solution.CompanyName%%><%%- product.\r\n\r\n%%><%%=Solution.Description%%><%%-", "About %%><%%=Solution.ProductName%%><%%-");
		}
	}
}
%%></CONTENT><OUTPUT>
<%%:
if (File(WPFUIMainMenuCodeFilePath) == null || (File(WPFUIMainMenuCodeFilePath).Contains("<Status>Generated</Status>") == true && File(WPFUIMainMenuCodeFilePath).Filter("<CreatedByUserName>","</CreatedDate>") != Text.Filter("<CreatedByUserName>","</CreatedDate>")))
{
	update(WPFUIMainMenuCodeFilePath)
}
%%></OUTPUT>