<CONFIG>
	NAME EFModelClassCode
	CATEGORY EF
	NODE Project
	TOPLEVEL False
</CONFIG>
<CONTENT>
<%%=USETABS false%%>
<%%:
<%%-/*<copyright>
%%>
<%%=Solution.Copyright%%><%%-
</copyright>*/
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//
// <CreatedByUserName>%%><%%=USER%%><%%-</CreatedByUserName>
// <CreatedDate>%%><%%=NOW%%><%%-</CreatedDate>
// <Status>Generated</Status>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

#region EDM Relationship Metadata
%%>
foreach (Relationship in Solution where Tags.Contains("DB") == true)
{
<%%-
[assembly: EdmRelationshipAttribute("%%><%%=Project.DbName%%><%%-Model", "%%><%%=RelationshipName%%><%%-", "%%><%%=ReferencedEntity.BLLClassName%%><%%-", System.Data.Metadata.Edm.RelationshipMultiplicity.%%>
if (ReferencedItemsMax == 1)
{
	if (ReferencedItemsMin == 0)
	{
		<%%-ZeroOrOne%%>
	}
	else
	{
		<%%-One%%>
	}
}
else
{
	<%%-Many%%>
}
<%%-, typeof(%%><%%=Project.Namespace%%><%%-.%%><%%=ReferencedEntity.BLLClassName%%><%%-), "%%><%%=EFSourceRoleName%%><%%-", System.Data.Metadata.Edm.RelationshipMultiplicity.%%>
if (ItemsMax == 1)
{
	if (ItemsMin == 0)
	{
		<%%-ZeroOrOne%%>
	}
	else
	{
		<%%-One%%>
	}
}
else
{
	<%%-Many%%>
}
<%%-, typeof(%%><%%=Project.Namespace%%><%%-.%%><%%=Entity.BLLClassName%%><%%-), true)]%%>
}
<%%-

#endregion

namespace %%><%%=Project.Namespace%%><%%-
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class %%><%%=DSModelClassName%%><%%- : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new %%><%%=DSModelClassName%%><%%- object using the connection string found in the '%%><%%=DSModelClassName%%><%%-' section of the application configuration file.
        /// </summary>
        public %%><%%=DSModelClassName%%><%%-() : base("name=%%><%%=DSModelClassName%%><%%-", "%%><%%=DSModelClassName%%><%%-")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new %%><%%=DSModelClassName%%><%%- object.
        /// </summary>
        public %%><%%=DSModelClassName%%><%%-(string connectionString) : base(connectionString, "%%><%%=DSModelClassName%%><%%-")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new %%><%%=DSModelClassName%%><%%- object.
        /// </summary>
        public %%><%%=DSModelClassName%%><%%-(EntityConnection connection) : base(connection, "%%><%%=DSModelClassName%%><%%-")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
  
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
      
        #region ObjectSet Properties%%>
        foreach (Entity in Solution where Tags.Contains("DB") == true)
        {
        	<%%-
        	
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<%%><%%=BLLClassName%%><%%-> %%><%%=BLLPluralEntityName%%><%%-
        {
            get
            {
                if ((_%%><%%=BLLPluralEntityName%%><%%- == null))
                {
                    _%%><%%=BLLPluralEntityName%%><%%- = base.CreateObjectSet<%%><%%=BLLClassName%%><%%->("%%><%%=BLLPluralEntityName%%><%%-");
                }
                return _%%><%%=BLLPluralEntityName%%><%%-;
            }
        }
        private ObjectSet<%%><%%=BLLClassName%%><%%-> _%%><%%=BLLPluralEntityName%%><%%-;%%>
        }
<%%-    
        #endregion
        
        #region AddTo Methods%%>
        foreach (Entity in Solution where Tags.Contains("DB") == true)
        {
        	<%%-
        	
        /// <summary>
        /// Deprecated Method for adding a new object to the %%><%%=BLLClassName%%><%%- EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTo%%><%%=BLLPluralEntityName%%><%%-(%%><%%=BLLClassName%%><%%- %%><%%=BLLClassName.CamelCase()%%><%%-)
        {
            base.AddObject("%%><%%=BLLClassName%%><%%-", %%><%%=BLLClassName.CamelCase()%%><%%-);
        }%%>
        }
<%%-
    
        #endregion
    }

    #endregion
    
    #region Entities
%%>
foreach (Entity in Solution where Tags.Contains("DB") == false)
{
	progress
}
foreach (Entity in Solution where Tags.Contains("DB") == true)
{
	progress
	<%%=EFClassCode%%>
}
<%%-
#endregion
    
}
%%>
%%></CONTENT><OUTPUT>
<%%:
if (File(EFModelClassFilePath)  != Text)
{
	update(EFModelClassFilePath)
}
%%></OUTPUT>