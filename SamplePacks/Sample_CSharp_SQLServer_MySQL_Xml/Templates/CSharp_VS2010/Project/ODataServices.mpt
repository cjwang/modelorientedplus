<CONFIG>
	NAME ODataServices
	NODE Project
	TOPLEVEL True
</CONFIG>
<CONTENT>
//
// This template is for creating a custom OData services layer that utilizes data operations
// in a business logic layer (such as a BLL project generated using the MiddleTier template).
//
// Note: Tag projects using this template with DS to best work with higher layer projects in this library.
//
<%%=USETABS false%%>
<%%-<?xml version="1.0" encoding="utf-8"?>
<!--<ProjectType>ODATA</ProjectType>-->
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>
    </ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{%%><%%=ProjectID.ToUpper()%%><%%-}</ProjectGuid>
    <ProjectTypeGuids>{349c5851-65df-11da-9384-00065b846f21};{fae04ec0-301f-11d3-bf4b-00c04f79efbc}</ProjectTypeGuids>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>%%><%%=Namespace%%><%%-</RootNamespace>
    <AssemblyName>%%><%%=Namespace%%><%%-</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <UseIISExpress>false</UseIISExpress>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Data.Entity" />
    <Reference Include="System.Data.Services" />
    <Reference Include="System.Data.Services.Client" />
    <Reference Include="System.ServiceModel" />
    <Reference Include="System.ServiceModel.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Web" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Web.Services" />
    <Reference Include="System.EnterpriseServices" />
    <Reference Include="System.Web.DynamicData" />
    <Reference Include="System.Web.Entity" />
    <Reference Include="System.Web.ApplicationServices" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Global.asax" />
    <Content Include="Web.config" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Global.asax.cs">
      <DependentUpon>Global.asax</DependentUpon>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="App_Data\" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v10.0\WebApplications\Microsoft.WebApplication.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{349c5851-65df-11da-9384-00065b846f21}">
        <WebProjectProperties>
          <UseIIS>False</UseIIS>
          <AutoAssignPort>False</AutoAssignPort>
          <DevelopmentServerPort>54454</DevelopmentServerPort>
          <DevelopmentServerVPath>/</DevelopmentServerVPath>
          <IISUrl>
          </IISUrl>
          <NTLMAuthentication>False</NTLMAuthentication>
          <UseCustomServer>False</UseCustomServer>
          <CustomServerUrl>
          </CustomServerUrl>
          <SaveServerSettingsInUserFile>False</SaveServerSettingsInUserFile>
        </WebProjectProperties>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>%%></CONTENT><OUTPUT>
<%%=ProjectFilePath%%>
<%%:
// delete project file if of a different type
if (File(Path).Contains("<ProjectType>ODATA</ProjectType>") == false)
{
	delete(Path)
}

// create project file if it does not exist
if (FileExists(Path) == false)
{
	update(Path)
}

// make sure standard project files are present
<%%>AssemblyInfoFile%%>
<%%>DataServicesGlobalClassFile%%>
log("GeneratedFile", DataServicesGlobalClassFilePath, true)
<%%>DataServicesGlobalMarkupFile%%>
<%%>DataServicesWebConfigFile%%>

// output entity data services
<%%>ODataServicesClassCode%%>
log("GeneratedFile", DataServicesClassFilePath, true)
if (File(Path).Contains(DataServicesClassFilePath.Substring(DataServicesClassFilePath.IndexOf(DataServicesClassFileName))) == false)
{
	// add to project file
	insert(ProjectFilePath, "<Compile Include=", "/>", "Properties\AssemblyInfo.cs", DataServicesClassFileProjectItem)
}
<%%>DataServicesMarkupCode%%>
log("GeneratedFile", DataServicesMarkupFilePath, true)
if (File(Path).Contains(DataServicesMarkupFilePath.Substring(DataServicesMarkupFilePath.IndexOf(DataServicesMarkupFileName)) + "\"") == false)
{
	// trace("Adding: " + DataServicesMarkupFilePath)
	// add to project file
	insert(ProjectFilePath, "<Content Include=", "/>", "Web.config", DataServicesMarkupFileProjectItem)
}

// delete generated files that are no longer part of the solution
forfiles(ProjectDirectory, ".cs")
{
	if (LogValue("GeneratedFile", ItemPath) == null && ItemFile.Contains("<Status>Generated</Status>") == true)
	{
		// trace("deleting: " + ItemPath)
		// delete file
		delete(ItemPath)
		
		// remove from project file
		remove(Path, "<Compile Include=", "</Compile>", ItemPath.Substring(Project.ProjectDirectory.Length + 1))
	}
}
forfiles(ProjectDirectory, ".svc")
{
	if (LogValue("GeneratedFile", ItemPath) == null)
	{
		// trace("deleting: " + ItemPath)
		// delete file
		delete(ItemPath)
		
		// remove from project file
		remove(Path, "<Content Include=", "/>", ItemPath.Substring(Project.ProjectDirectory.Length + 1))
	}
}

// make sure project references are present
if (ProjectReferenceCount > 0)
{
	foreach (Project)
	{
		if (File(Path).Contains(ProjectFileName) == false)
		{
			if (File(Path).Contains("<ProjectReference") == true)
			{
				// add to project file
				insert(../ProjectFilePath, "<ProjectReference", ProjectReferenceProjectItem)
			}
			else
			{
				// add to project file as new ItemGroup
				insert(../ProjectFilePath, "<Import Project", ProjectReferenceProjectItemGroup)
			}
		}
	}
}
%%></OUTPUT>