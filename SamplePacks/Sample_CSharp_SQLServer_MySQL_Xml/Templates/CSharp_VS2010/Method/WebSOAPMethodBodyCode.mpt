<CONFIG>
	NAME WebSOAPMethodBodyCode
	CATEGORY WebSOAP
	NODE Method
	TOPLEVEL False
</CONFIG>
<CONTENT>
<%%=USETABS true%%>
<%%:
	<%%-
	{%%><%%=TAB 1%%><%%-
		%%><%%=WebSOAPReturnType%%><%%- results = new %%><%%=WebSOAPReturnType%%><%%-();
		try
		{%%><%%=TAB 1%%><%%-
		// execute business logic methods
		ProcessRequest();
		%%>
		with (Entity)
		{
			<%%=BLLManagerDataType%%><%%- manager = new %%><%%=BLLManagerDataType%%><%%-();%%>
		}
		switch (MethodTypeCode)
		{
			case 2: // GetAll
			case 5: // GetAllByCriteria
			case 4: // GetAllByForeignkey
				<%%-
				manager.DataAccessOptions.SortColumn = sortColumn;
				manager.DataAccessOptions.SetSortDirection(sortDirection);%%>
				break
			case 3: // GetMany
			case 7: // GetManyByCriteria
			case 6: // GetManyByForeignKey
				<%%-
				manager.DataAccessOptions.SortColumn = sortColumn;
				manager.DataAccessOptions.SetSortDirection(sortDirection);
				manager.DataAccessOptions.StartIndex = startIndex;
				manager.DataAccessOptions.PageSize = pageSize;
				manager.DataAccessOptions.MaximumListSize = maximumListSize;
				int totalRecords = 0;
				bool maximumListSizeExceeded = false;%%>
				break
		}
		switch (MethodTypeCode)
		{
			case 1: // GetOne
				with (Entity)
				{
					<%%-
					%%><%%=WebSOAPMiddleTierDataType%%>
				}
				<%%- result = %%><%%- manager.%%><%%=WebSOAPMiddleTierMethodCall%%><%%-;
				results.DataAccessOptions = manager.DataAccessOptions;%%>
				with (Entity)
				{
					<%%-
					if (result != null)
					{%%><%%=TAB 1%%><%%-
						results.%%><%%=WebSOAPMiddleTierPluralEntityName%%><%%-.Add(result);
						results.SetWebResponseAndStatus(HttpStatusCode.OK, "%%><%%=WebSOAPMiddleTierClassName%%><%%- successfully retrieved.");%%><%%=TAB -1%%><%%-
					}
					else
					{%%><%%=TAB 1%%><%%-
						results.SetWebResponseAndStatus(HttpStatusCode.NotFound, "%%><%%=WebSOAPMiddleTierClassName%%><%%- not found.");%%><%%=TAB -1%%><%%-
					}%%>
				}
				break
			case 2: // GetAll
			case 5: // GetAllByCriteria
			case 4: // GetAllByForeignkey
				<%%-
				results.%%>
				with (Entity)
				{
					<%%=WebSOAPMiddleTierPluralEntityName%%>
				}
				<%%- =  manager.%%><%%=WebSOAPMiddleTierMethodCall%%><%%-;
				results.DataAccessOptions = manager.DataAccessOptions;%%>
				with (Entity)
				{
					<%%-
					if (results.%%><%%=WebSOAPMiddleTierClassName%%><%%-Count > 0)
					{%%><%%=TAB 1%%><%%-
						results.SetWebResponseAndStatus(HttpStatusCode.OK, "%%><%%=WebSOAPMiddleTierClassName%%><%%- items successfully retrieved.");%%><%%=TAB -1%%><%%-
					}
					else
					{%%><%%=TAB 1%%><%%-
						results.SetWebResponseAndStatus(HttpStatusCode.OK, "No %%><%%=WebSOAPMiddleTierClassName%%><%%- items found.");%%><%%=TAB -1%%><%%-
					}%%>
				}
				break
			case 3: // GetMany
			case 7: // GetManyByCriteria
			case 6: // GetManyByForeignKey
				<%%-
				results.%%>
				with (Entity)
				{
					<%%=WebSOAPMiddleTierPluralEntityName%%>
				}
				<%%- =  manager.%%><%%=WebSOAPMiddleTierMethodCall%%><%%-;
				results.DataAccessOptions = manager.DataAccessOptions;
				results.TotalRecords = totalRecords;
				results.MaximumListSizeExceeded = maximumListSizeExceeded;%%>
				with (Entity)
				{
					<%%-
					if (results.%%><%%=WebSOAPMiddleTierClassName%%><%%-Count > 0)
					{%%><%%=TAB 1%%><%%-
						results.SetWebResponseAndStatus(HttpStatusCode.OK, "%%><%%=WebSOAPMiddleTierClassName%%><%%- items successfully retrieved.");%%><%%=TAB -1%%><%%-
					}
					else
					{%%><%%=TAB 1%%><%%-
						results.SetWebResponseAndStatus(HttpStatusCode.OK, "No %%><%%=WebSOAPMiddleTierClassName%%><%%- items found.");%%><%%=TAB -1%%><%%-
					}%%>
				}
				break
			case 8: // AddOne
				<%%-
				manager.%%><%%=WebSOAPMiddleTierMethodCall%%>
				with (Entity)
				{
					<%%-;
					results.%%><%%=WebSOAPMiddleTierPluralEntityName%%><%%-.Add(item);
					results.SetWebResponseAndStatus(HttpStatusCode.Created, "%%><%%=WebSOAPMiddleTierClassName%%><%%- successfully created.");%%>
				}
				break
			case 9: // UpdateOne
				with (Entity)
				{
					foreach (Method where IsGetOneMethod == true && IsPrimaryMethod == true limit 1)
					{
						with (Entity)
						{
							<%%-
							%%><%%=WebSOAPMiddleTierDataType%%>
						}
						<%%- item2 = manager.%%><%%=WebSOAPMiddleTierMethodName%%><%%-(%%>
						foreach (Parameter)
						{
							with (Property from Solution.Find(ReferencedPropertyID))
							{
								<%%-item.%%><%%=WebSOAPPropertyName%%><%%-, %%>
							}
						}
						<%%-cascadeDepth);
						if (item2 != null)
						{%%><%%=TAB 1%%>
					}
				}
				<%%-
				manager.%%><%%=WebSOAPMiddleTierMethodCall%%>
				with (Entity)
				{
					<%%-;
					results.%%><%%=WebSOAPMiddleTierPluralEntityName%%><%%-.Add(item);
					results.SetWebResponseAndStatus(HttpStatusCode.OK, "%%><%%=WebSOAPMiddleTierClassName%%><%%- successfully updated.");%%>

					foreach (Method where IsGetOneMethod == true && IsPrimaryMethod == true limit 1)
					{
						<%%=TAB -1%%><%%-
						}
						else
						{%%><%%=TAB 1%%>
							with (Entity)
							{
								<%%-
								results.SetWebResponseAndStatus(HttpStatusCode.NotFound, "%%><%%=WebSOAPMiddleTierClassName%%><%%- not found for updating.");%%><%%=TAB -1%%>
							}
							<%%-
						}%%><%%=TAB -1%%>
					}
				}
				break
			case 10: // DeleteOne
				foreach (Method where IsGetOneMethod == true && IsPrimaryMethod == true limit 1)
				{
					<%%-
					%%><%%=Entity.WebSOAPMiddleTierDataType%%><%%- item2 = manager.%%><%%=WebSOAPMiddleTierMethodName%%><%%-(%%>
					foreach (Parameter)
					{
						with (Property from Solution.Find(ReferencedPropertyID))
						{
							<%%-item.%%><%%=WebSOAPPropertyName%%><%%-, %%>
						}
					}
					<%%-cascadeDepth);
					if (item2 != null)
					{%%><%%=TAB 1%%><%%-
						item.TransformDataFromObject(item2, null);%%>
						with (../)
						{
							<%%-
							manager.%%><%%=WebSOAPMiddleTierMethodCall%%>
						}
						<%%-;
						results.%%><%%=Entity.WebSOAPMiddleTierPluralEntityName%%><%%-.Add(item);
						results.SetWebResponseAndStatus(HttpStatusCode.OK, "%%><%%=Entity.WebSOAPMiddleTierClassName%%><%%- successfully deleted.");%%><%%=TAB -1%%><%%-
					}
					else
					{%%><%%=TAB 1%%><%%-
						results.SetWebResponseAndStatus(HttpStatusCode.NotFound, "%%><%%=Entity.WebSOAPMiddleTierClassName%%><%%- not found for deletion.");%%><%%=TAB -1%%><%%-
					}%%>
				}
				break
		}
		<%%-
		manager = null;
		ProcessResponse();%%><%%=TAB -1%%><%%-
	}
	catch (ApplicationException ex)
	{%%><%%=TAB 1%%><%%-
		results.SetWebResponseAndStatus(HttpStatusCode.InternalServerError, ex.Message);%%><%%=TAB -1%%><%%-
	}
	catch (Exception ex)
	{%%><%%=TAB 1%%><%%-
		results.SetWebResponseAndStatus(HttpStatusCode.InternalServerError, ex.Message);%%><%%=TAB -1%%><%%-
	}
	return results;%%><%%=TAB -1%%><%%-
}%%>
%%></CONTENT>