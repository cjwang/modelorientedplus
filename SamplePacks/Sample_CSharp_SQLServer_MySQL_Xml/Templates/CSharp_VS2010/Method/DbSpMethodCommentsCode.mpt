<CONFIG>
	NAME DbSpMethodCommentsCode
	CATEGORY DbSp
	NODE Method
</CONFIG>
<CONTENT>
<%%=USETABS true%%>
<%%-
/*--------------------------------------------------------------------------------%%>
<%%:
	switch (MethodTypeName)
	{
		case "GetOne":
			with (Entity)
			{
				<%%-
				/// <summary>This procedure is used to get an instance of %%><%%=DALClassName%%><%%-.</summary>%%>
			}
			break
		case "AddOne":
			with (Entity)
			{
				<%%-
				/// <summary>This procedure is used to add an instance of %%><%%=DALClassName%%><%%-.</summary>%%>
			}
			break
		case "UpdateOne":
			with (Entity)
			{
				<%%-
				/// <summary>This procedure is used to update an instance of %%><%%=DALClassName%%><%%-.</summary>%%>
			}
			break
		case "DeleteOne":
			with (Entity)
			{
				<%%-
				/// <summary>This procedure is used to delete an instance of %%><%%=DALClassName%%><%%-.</summary>%%>
			}
			break
		case "DeleteAllByForeignKey":
			with (Entity)
			{
				<%%-
				/// <summary>This procedure is used to delete a number of instances of %%><%%=DALClassName%%><%%-
				/// by a foreign key.</summary>%%>
			}
			break
		case "GetAll":
			with (Entity)
			{
				<%%-
				/// <summary>This procedure is used to get all of the instances of %%><%%=DALClassName%%><%%-.</summary>%%>
			}
			break
		case "GetAllByCriteria":
			with (Entity)
			{
				<%%-
				/// <summary>This procedure is used to get all instances of %%><%%=DALClassName%%><%%-
				/// by input criteria.</summary>%%>
			}
			break
		case "GetAllByForeignkey":
			with (Entity)
			{
				<%%-
				/// <summary>This procedure is used to get all instances of %%><%%=DALClassName%%><%%-
				/// by a foreign key.</summary>%%>
			}
			break
		case "GetMany":
			with (Entity)
			{
				<%%-
				/// <summary>This procedure is used to a number of the instances of %%><%%=DALClassName%%><%%-.</summary>%%>
			}
			break
		case "GetManyByCriteria":
			with (Entity)
			{
				<%%-
				/// <summary>This procedure is used to get a number of instances of %%><%%=DALClassName%%><%%-
				/// by input criteria.</summary>%%>
			}
			break
		case "GetManyByForeignKey":
			with (Entity)
			{
				<%%-
				/// <summary>This method is used to get a number of instances of %%><%%=DALClassName%%><%%-
				/// by a foreign key.</summary>%%>
			}
			break
	}
%%>
<%%-
///
/// This procedure is code generated and if it needs to be modified and not regenerated,
/// change the status below to something other than Generated.
///
/// <CreatedByUserName>%%><%%=USER%%><%%-</CreatedByUserName>
/// <CreatedDate>%%><%%=NOW%%><%%-</CreatedDate>
/// <Status>Generated</Status>
///
/// <param name="@sqlErrorNumber">The error number if an error is encountered.</param>
/// <param name="@sqlErrorMessage">The error message if an error is encountered.</param>%%>
<%%:
	switch (MethodTypeCode)
	{
		case 8: // AddOne
			foreach (Property)
			{
				CurrentAuditProperty = null
				with (AuditProperty from Solution.Find(PropertyName, PropertyName))
				{
					CurrentAuditProperty = AuditProperty
				}
				if (CurrentAuditProperty == null || (CurrentAuditProperty.IsAddAuditProperty == true && (CurrentAuditProperty.IsValueGenerated == false || CurrentAuditProperty.DataTypeCode == 25 /* Timestamp */)))
				{
					if (CurrentAuditProperty != null && CurrentAuditProperty.DataTypeCode == 25 /* Timestamp */)
					{
						<%%-
						/// <param name="%%><%%=DbSpParameterName%%><%%-">The timestamp on the database record.</param>%%>
					}
					else
					{
						<%%-
						/// <param name="%%><%%=DbSpParameterName%%><%%-">The value for the %%><%%=DBPropertyName%%><%%- property.</param>%%>
					}
				}
			}
			break
		case 9: // UpdateOne
			log("DbSpMethodCommentsCode", "AddTimestampCheck", false)
			foreach (Property)
			{
				CurrentAuditProperty = null
				with (AuditProperty from Solution.Find(PropertyName, PropertyName))
				{
					CurrentAuditProperty = AuditProperty
				}
				if (CurrentAuditProperty == null || (CurrentAuditProperty.IsAddAuditProperty == true && (CurrentAuditProperty.IsValueGenerated == false || CurrentAuditProperty.DataTypeCode == 25 /* Timestamp */)))
				{
					if (CurrentAuditProperty != null && CurrentAuditProperty.DataTypeCode == 25 /* Timestamp */)
					{
						<%%-
						/// <param name="%%><%%=DbSpParameterName%%><%%-">The timestamp on the database record.</param>%%>
						log("DbSpMethodCommentsCode", "AddTimestampCheck", true)
					}
					else
					{
						<%%-
						/// <param name="%%><%%=DbSpParameterName%%><%%-">The value for the %%><%%=DBPropertyName%%><%%- property.</param>%%>
					}
				}
			}
			if (LogValue("DbSpMethodCommentsCode", "AddTimestampCheck") == true)
			{
				<%%-
				/// <param name="@checkTimestamp">Flag indicating whether timestamp validation should occur.</param>%%>
			}
			break
		case 10: // DeleteOne
			foreach (Property)
			{
				if (IsPrimaryKeyMember == true)
				{
					<%%-
					/// <param name="%%><%%=DbSpParameterName%%><%%-">The value for the %%><%%=DBPropertyName%%><%%- property.</param>%%>
				}
			}
			break
	}
	foreach (Parameter)
	{
		<%%-
		/// <param name="%%><%%=DbSpParameterName%%><%%-">The value for the %%><%%=DBPropertyName%%><%%- property.</param>%%>
	}
	switch (MethodTypeCode)
	{
		case 2: // GetAll
		case 5: // GetAllByCriteria
		case 4: // GetAllByForeignKey
			if (Entity.IsActivationEntity == true)
			{
				<%%-
				/// <param name="@includeInactive">Flag indicating whether inactive records should be included in the results.</param>%%>
			}
			<%%-
				/// <param name="@sortColumn">The column to perform the sort by.</param>
				/// <param name="@sortDirection">The direction to sort by the sort column.</param>%%>
			break
		case 3: // GetMany
		case 7: // GetManyByCriteria
		case 6: // GetManyByForeignKey
			if (Entity.IsActivationEntity == true)
			{
				<%%-
				/// <param name="@includeInactive">Flag indicating whether inactive records should be included in the results.</param>%%>
			}
			<%%-
			/// <param name="@startIndex">The 0 based index in the overall results to return the page.</param>
			/// <param name="@pageSize">The size of the page of results.</param>
			/// <param name="@maximumListSize">The maximum amount of results allowed to be returned.</param>
			/// <param name="@sortColumn">The column to perform the sort by.</param>
			/// <param name="@sortDirection">The direction to sort by the sort column.</param
			/// <param name="@totalRecords">The total number of records in the overall search.</param
			/// <param name="@maximumListSizeExceeded">Flag indicating if total records is greater than the maximum list size.</param%%>
			break
	}
%%>
<%%-
///------------------------------------------------------------------------------*/%%></CONTENT>