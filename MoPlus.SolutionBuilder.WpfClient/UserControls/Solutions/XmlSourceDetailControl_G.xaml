<!--
 This  code was generated from a template.  Change the
 Status value below to something other than Generated if you have
 customized this file outside of protected areas to prevent changes
 from being overwritten.

 <CreatedByUserName>INCODE-1\Dave</CreatedByUserName>
 <CreatedDate>8/7/2013</CreatedDate>
 <Status>Generated</Status>
-->
<lib:EditControl x:Class="MoPlus.SolutionBuilder.WpfClient.UserControls.Solutions.XmlSourceDetailControl"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:VM="clr-namespace:MoPlus.ViewModel;assembly=MoPlus.ViewModel"
                     xmlns:SolutionsVM="clr-namespace:MoPlus.ViewModel.Solutions;assembly=MoPlus.ViewModel"
                     xmlns:lib="clr-namespace:MoPlus.SolutionBuilder.WpfClient.Library"
                     xmlns:Settings="clr-namespace:MoPlus.SolutionBuilder.WpfClient.Library;assembly=MoPlus.SolutionBuilder.WpfClient"
                     mc:Ignorable="d" 
                     d:DesignHeight="300" d:DesignWidth="300">
 	<lib:EditControl.CommandBindings>
 		<CommandBinding Command="Open" Executed="OpenExecuted"></CommandBinding>
		<!-- region protected -->
		<CommandBinding Command="VM:CustomCommands.ExplicitOpen" Executed="SourceOpenExecuted"></CommandBinding>
		<!-- endregion protected -->
	</lib:EditControl.CommandBindings>
	<lib:EditControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="../../Resources/Theme.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<Style x:Key="SpecificationSourceIDInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding SpecificationSourceIDCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding SpecificationSourceIDValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="SourceFileNameInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding SourceFileNameCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding SourceFileNameValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="SourceFilePathInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding SourceFilePathCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding SourceFilePathValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="TemplatePathInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding TemplatePathCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding TemplatePathValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="OrderInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding OrderCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding OrderValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="DescriptionInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding DescriptionCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding DescriptionValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="SourceNameInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding SourceNameCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding SourceNameValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="SpecSourceNameInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding SpecSourceNameCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding SpecSourceNameValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="TagsInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding TagsCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding TagsValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<VM:LabelHelper x:Key="labels" />
		</ResourceDictionary>
	</lib:EditControl.Resources>
	<ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Background="{StaticResource ControlBackgroundBrush}">
		<Grid MinWidth="400" MinHeight="400" DataContextChanged="Grid_DataContextChanged"
			  MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=ScrollViewer}}"
			  RenderTransformOrigin="0.5,0.5">
			<Grid.LayoutTransform>
				<TransformGroup>
					<ScaleTransform ScaleX="{Binding Source={x:Static Settings:UserSettingsHelper.Instance}, Path=ControlSize, Mode=TwoWay}"
					                          ScaleY="{Binding Source={x:Static Settings:UserSettingsHelper.Instance}, Path=ControlSize, Mode=TwoWay}"/>
				</TransformGroup>
			</Grid.LayoutTransform>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="*"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="10"></ColumnDefinition>
				<ColumnDefinition Width="Auto"></ColumnDefinition>
				<ColumnDefinition Width="*"></ColumnDefinition>
				<ColumnDefinition Width="10"></ColumnDefinition>
			</Grid.ColumnDefinitions>
			<Label Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Style="{DynamicResource LabelHeader}" Content="{Binding Title, Mode=OneWay}" />
			<Label Grid.Row="1" Grid.Column="1" Style="{DynamicResource SpecificationSourceIDInput}" Content="{Binding SpecificationSourceIDLabel, Mode=OneWay}" />
			<Label Grid.Row="2" Grid.Column="1" Style="{DynamicResource SourceFileNameInput}" Content="{Binding SourceFileNameLabel, Mode=OneWay}" />
			<Label Grid.Row="3" Grid.Column="1" Style="{DynamicResource SourceFilePathInput}" Content="{Binding SourceFilePathLabel, Mode=OneWay}" />
			<Label Grid.Row="4" Grid.Column="1" Style="{DynamicResource TemplatePathInput}" Content="{Binding TemplatePathLabel, Mode=OneWay}" />
			<Label Grid.Row="6" Grid.Column="1" Style="{DynamicResource DescriptionInput}" Content="{Binding DescriptionLabel, Mode=OneWay}" />
			<Label Grid.Row="7" Grid.Column="1" Style="{DynamicResource TagsInput}" Content="{Binding TagsLabel, Mode=OneWay}" />
			<Label Grid.Row="8" Grid.Column="1" Style="{DynamicResource SourceNameInput}" Content="{Binding SourceNameLabel, Mode=OneWay}" Visibility="{Binding SourceNameVisibility}" />
			<Label Grid.Row="9" Grid.Column="1" Style="{DynamicResource SpecSourceNameInput}" Content="{Binding SpecSourceNameLabel, Mode=OneWay}" Visibility="{Binding SpecSourceNameVisibility}" />
			<Border Name="PlaceHolderBorder" Grid.Column="2" Margin="7"/>
			<Label Grid.Row="1" Grid.Column="2" Style="{StaticResource LabelValue}" Content="{Binding SpecificationSourceID, Mode=OneWay}" />
			<!-- region protected -->
			<TextBox Grid.Row="2" Grid.Column="2" ToolTip="{Binding SourceFileNameValidationMessage, Mode=OneWay}" IsReadOnly="True" Text="{Binding SourceFileName, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Validation.ErrorTemplate="{x:Null}" />
			<!-- endregion protected -->
			<!-- region protected -->
			<Grid Grid.Row="3" Grid.Column="2" Margin="0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"></ColumnDefinition>
					<ColumnDefinition Width="Auto"></ColumnDefinition>
					<ColumnDefinition Width="3"></ColumnDefinition>
				</Grid.ColumnDefinitions>
				<TextBox Grid.Column="0" ToolTip="{Binding SourceFilePathValidationMessage, Mode=OneWay}" Text="{Binding SourceFilePath, Mode=OneWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MaxLength="1024" Validation.ErrorTemplate="{x:Null}" />
				<Button Grid.Column="1" Command="VM:CustomCommands.ExplicitOpen" Content="{Binding SelectButtonLabel}"></Button>
			</Grid>
			<!-- endregion protected -->
			<Grid Grid.Row="4" Grid.Column="2" Margin="0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"></ColumnDefinition>
					<ColumnDefinition Width="Auto"></ColumnDefinition>
					<ColumnDefinition Width="3"></ColumnDefinition>
				</Grid.ColumnDefinitions>
				<TextBox Grid.Column="0" ToolTip="{Binding TemplatePathValidationMessage, Mode=OneWay}" Text="{Binding TemplatePath, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MaxLength="512" Validation.ErrorTemplate="{x:Null}" Loaded="TextBox_Loaded"/>
				<Button Grid.Column="1" Command="Open" Content="{Binding SelectButtonLabel}"></Button>
			</Grid>
			<WrapPanel Grid.Row="5" Grid.Column="2">
				<StackPanel Orientation="Horizontal">
					<Label Style="{DynamicResource OrderInput}" Content="{Binding OrderLabel, Mode=OneWay}" />
					<TextBox Width="80" ToolTip="{Binding OrderValidationMessage, Mode=OneWay}" Text="{Binding Order, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MaxLength="6" Validation.ErrorTemplate="{x:Null}" PreviewTextInput="TextBox_PreviewNumericInput" DataObject.Pasting="TextBox_NumericPasting"/>
				</StackPanel>
			</WrapPanel>
			<Border Name="DescriptionPlaceHolderBorder" Grid.Row="6" Margin="7"/>
			<TextBox Grid.Row="6" Grid.Column="2" ToolTip="{Binding DescriptionValidationMessage, Mode=OneWay}" Text="{Binding Description, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" TextAlignment="Left" TextWrapping="Wrap" Width="{Binding ElementName=PlaceHolderBorder, Path=ActualWidth}" Height="{Binding ElementName=DescriptionPlaceHolderBorder, Path=ActualHeight}" MinHeight="60" MaxLength="2000" Validation.ErrorTemplate="{x:Null}"/>
			<TextBox Grid.Row="7" Grid.Column="2" ToolTip="{Binding TagsValidationMessage, Mode=OneWay}" Text="{Binding Tags, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MaxLength="500" Validation.ErrorTemplate="{x:Null}"/>
			<Label Grid.Row="8" Grid.Column="2" Style="{StaticResource LabelValue}" Content="{Binding SourceName, Mode=OneWay}" Visibility="{Binding SourceNameVisibility}" />
			<Label Grid.Row="9" Grid.Column="2" Style="{StaticResource LabelValue}" Content="{Binding SpecSourceName, Mode=OneWay}" Visibility="{Binding SpecSourceNameVisibility}" />
			<StackPanel Orientation="Horizontal" Grid.Row="10" Grid.Column="2" Margin="5">
				<Button Command="{Binding UpdateCommand}" Content="{Binding UpdateButtonLabel}"></Button>
				<Button Command="{Binding ResetCommand}" Content="{Binding ResetButtonLabel}"></Button>
				<Button Command="{Binding DefaultsCommand}" Content="{Binding DefaultsButtonLabel}"></Button>
				<Button Command="{Binding NewCommand}" Content="{Binding NewButtonLabel}"></Button>
				<Button Command="{Binding CloseConfirmCommand}" Content="{Binding CloseButtonLabel}"></Button>
			</StackPanel>
		</Grid>
	</ScrollViewer>
</lib:EditControl>