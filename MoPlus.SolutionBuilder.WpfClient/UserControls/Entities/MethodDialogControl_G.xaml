<!--
 This  code was generated from a template.  Change the
 Status value below to something other than Generated if you have
 customized this file outside of protected areas to prevent changes
 from being overwritten.

 <CreatedByUserName>INCODE-1\Dave</CreatedByUserName>
 <CreatedDate>3/16/2013</CreatedDate>
 <Status>Generated</Status>
-->
<lib:EditControl x:Class="MoPlus.SolutionBuilder.WpfClient.UserControls.Entities.MethodDialogControl"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:VM="clr-namespace:MoPlus.ViewModel;assembly=MoPlus.ViewModel"
                     xmlns:EntitiesVM="clr-namespace:MoPlus.ViewModel.Entities;assembly=MoPlus.ViewModel"
                     xmlns:lib="clr-namespace:MoPlus.SolutionBuilder.WpfClient.Library"
                     xmlns:Settings="clr-namespace:MoPlus.SolutionBuilder.WpfClient.Library;assembly=MoPlus.SolutionBuilder.WpfClient"
                     mc:Ignorable="d" 
                     d:DesignHeight="300" d:DesignWidth="300">
 	<lib:EditControl.CommandBindings>
		<!-- region protected -->
		<CommandBinding Command="New" CanExecute="NewCanExecute" Executed="NewExecuted"></CommandBinding>
		<CommandBinding Command="Delete" PreviewCanExecute="PreviewDeleteCanExecute" Executed="DeleteExecuted"></CommandBinding>
		<CommandBinding Command="VM:CustomCommands.NewChildItem" CanExecute="NewChildItemCanExecute" Executed="NewChildItemExecuted"></CommandBinding>
		<CommandBinding Command="VM:CustomCommands.DeleteChildItem" PreviewCanExecute="PreviewDeleteChildItemCanExecute" Executed="DeleteChildItemExecuted"></CommandBinding>
		<!-- endregion protected -->
	</lib:EditControl.CommandBindings>
	<lib:EditControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="../../Resources/Theme.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<Style x:Key="MethodIDInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding MethodIDCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding MethodIDValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="MethodNameInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding MethodNameCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding MethodNameValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="MethodTypeCodeInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding MethodTypeCodeCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding MethodTypeCodeValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="DescriptionInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding DescriptionCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding DescriptionValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="ParameterListInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding ParameterListCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding ParameterListValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="MethodRelationshipListInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding MethodRelationshipListCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding MethodRelationshipListValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="TagsInput" BasedOn="{StaticResource LabelInput}" TargetType="{x:Type Label}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding TagsCustomized, Mode=OneWay}" Value="True">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Black" />
						</DataTrigger.Setters>
					</DataTrigger>
					<DataTrigger Binding="{Binding TagsValidationMessage, Converter={StaticResource IsNullOrEmptyConverter}, Mode=OneWay}" Value="False">
						<DataTrigger.Setters>
							<Setter Property="Foreground" Value="Red" />
						</DataTrigger.Setters>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			<VM:LabelHelper x:Key="labels" />
		</ResourceDictionary>
	</lib:EditControl.Resources>
	<ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Background="{StaticResource ControlBackgroundBrush}">
		<Grid DataContextChanged="Grid_DataContextChanged"
			  MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=ScrollViewer}}"
			  RenderTransformOrigin="0.5,0.5">
			<Grid.LayoutTransform>
				<TransformGroup>
					<ScaleTransform ScaleX="{Binding Source={x:Static Settings:UserSettingsHelper.Instance}, Path=ControlSize, Mode=TwoWay}"
					                          ScaleY="{Binding Source={x:Static Settings:UserSettingsHelper.Instance}, Path=ControlSize, Mode=TwoWay}"/>
				</TransformGroup>
			</Grid.LayoutTransform>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="*"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"></ColumnDefinition>
				<ColumnDefinition Width="*"></ColumnDefinition>
			</Grid.ColumnDefinitions>
			<Label Margin="1" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Style="{DynamicResource LabelHeader}" Content="{Binding Title, Mode=OneWay}" />
			<!--Label  Margin="1" Grid.Row="1" Grid.Column="0" Style="{DynamicResource MethodIDInput}" Content="{Binding MethodIDLabel, Mode=OneWay}" /-->
			<Label Margin="1" Grid.Row="2" Grid.Column="0" Style="{DynamicResource MethodNameInput}" Content="{Binding MethodNameLabel, Mode=OneWay}" />
			<Label Margin="1" Grid.Row="3" Grid.Column="0" Style="{DynamicResource MethodTypeCodeInput}" Content="{Binding MethodTypeCodeLabel, Mode=OneWay}" />
			<Label Margin="1" Grid.Row="4" Grid.Column="0" Style="{DynamicResource ParameterListInput}" Content="{Binding ParameterListLabel, Mode=OneWay}" />
			<Label Margin="1" Grid.Row="5" Grid.Column="0" Style="{DynamicResource MethodRelationshipListInput}" Content="{Binding MethodRelationshipListLabel, Mode=OneWay}" />
			<Label Margin="1" Grid.Row="6" Grid.Column="0" Style="{DynamicResource DescriptionInput}" Content="{Binding DescriptionLabel, Mode=OneWay}" />
			<Label Margin="1" Grid.Row="7" Grid.Column="0" Style="{DynamicResource TagsInput}" Content="{Binding TagsLabel, Mode=OneWay}" />
			<Border Name="PlaceHolderBorder" Grid.Column="1" Margin="1"/>
			<!--Label Margin="1" Grid.Row="1" Grid.Column="1" Style="{StaticResource LabelValue}" Content="{Binding MethodID, Mode=OneWay}" /-->
			<TextBox Margin="0" Grid.Row="2" Grid.Column="1" ToolTip="{Binding MethodNameValidationMessage, Mode=OneWay}" Text="{Binding MethodName, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MaxLength="255" Validation.ErrorTemplate="{x:Null}" Loaded="TextBox_Loaded"/>
			<ComboBox Margin="0" Grid.Row="3" Grid.Column="1" ToolTip="{Binding MethodTypeCodeValidationMessage, Mode=OneWay}" ItemsSource="{Binding MethodTypeCodeItems}" DisplayMemberPath="DisplayName" SelectedValuePath="MethodTypeCode" SelectedValue="{Binding MethodTypeCode, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Validation.ErrorTemplate="{x:Null}" />
			<!-- region protected -->
			<GroupBox Header="{Binding Source={StaticResource labels}, Path=ParametersHeader}" Grid.Row="4" Grid.Column="1" Width="{Binding ElementName=PlaceHolderBorder, Path=ActualWidth}" >
				<Grid Margin="2">
					<DataGrid Name="ItemsGrid" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" HeadersVisibility="Column" ItemsSource="{Binding Items}" lib:DataGridHelper.DataGridCommitOnUnfocused="True">
						<DataGrid.ContextMenu>
							<ContextMenu>
								<MenuItem Header="{Binding MenuLabelNewParameter}" Command="New"></MenuItem>
								<MenuItem Header="{Binding MenuLabelDelete}" Command="Delete"></MenuItem>
							</ContextMenu>
						</DataGrid.ContextMenu>
						<DataGrid.Columns>
							<DataGridTextColumn Header="{Binding Source={StaticResource labels}, Path=ParameterNameHeader}" Binding="{Binding ParameterName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto" />
							<lib:BindableDataGridComboBoxColumn Header="{Binding Source={StaticResource labels}, Path=ReferencedEntityHeader}" DisplayMemberPath="DisplayName" SelectedValuePath="EntityID" SelectedValueBinding="{Binding ReferencedEntityID, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding ReferencedEntityIDItems}" />
							<lib:BindableDataGridComboBoxColumn Header="{Binding Source={StaticResource labels}, Path=ReferencedPropertyHeader}" DisplayMemberPath="PropertyName" SelectedValuePath="PropertyID" SelectedValueBinding="{Binding ReferencedPropertyID, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding ReferencedPropertyIDItems}" />
							<DataGridTextColumn Header="{Binding Source={StaticResource labels}, Path=OrderHeader}" Binding="{Binding Order, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto" />
							<DataGridTextColumn Header="{Binding Source={StaticResource labels}, Path=DescriptionHeader}" Binding="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="*" />
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</GroupBox>
			<!-- endregion protected -->
			<!-- region protected -->
			<GroupBox Header="{Binding Source={StaticResource labels}, Path=MethodRelationshipsHeader}" Grid.Row="5" Grid.Column="1" Width="{Binding ElementName=PlaceHolderBorder, Path=ActualWidth}">
				<Grid Margin="2">
					<DataGrid Name="RelationshipsGrid" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" HeadersVisibility="Column" ItemsSource="{Binding MethodRelationshipItems}" lib:DataGridHelper.DataGridCommitOnUnfocused="True">
						<DataGrid.ContextMenu>
							<ContextMenu>
								<MenuItem Header="{Binding MenuLabelNewMethodRelationship}" Command="VM:CustomCommands.NewChildItem"></MenuItem>
								<MenuItem Header="{Binding MenuLabelDelete}" Command="VM:CustomCommands.DeleteChildItem"></MenuItem>
							</ContextMenu>
						</DataGrid.ContextMenu>
						<DataGrid.Columns>
							<lib:BindableDataGridComboBoxColumn Header="{Binding Source={StaticResource labels}, Path=RelationshipHeader}" DisplayMemberPath="DisplayName" SelectedValuePath="RelationshipID" SelectedValueBinding="{Binding RelationshipID, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding RelationshipIDItems}" />
							<DataGridTextColumn Header="{Binding Source={StaticResource labels}, Path=OrderHeader}" Binding="{Binding Order, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto" />
							<DataGridTextColumn Header="{Binding Source={StaticResource labels}, Path=DescriptionHeader}" Binding="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="*" />
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</GroupBox>
			<!-- endregion protected -->
			<Border Name="DescriptionPlaceHolderBorder" Grid.Row="6" Margin="7"/>
			<TextBox Margin="0" Grid.Row="6" Grid.Column="1" ToolTip="{Binding DescriptionValidationMessage, Mode=OneWay}" Text="{Binding Description, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" TextAlignment="Left" TextWrapping="Wrap" Width="{Binding ElementName=PlaceHolderBorder, Path=ActualWidth}" Height="{Binding ElementName=DescriptionPlaceHolderBorder, Path=ActualHeight}" MinHeight="60" MaxLength="2000" Validation.ErrorTemplate="{x:Null}"/>
			<TextBox Margin="0" Grid.Row="7" Grid.Column="1" ToolTip="{Binding TagsValidationMessage, Mode=OneWay}" Text="{Binding Tags, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MaxLength="500" Validation.ErrorTemplate="{x:Null}"/>
			<StackPanel Orientation="Horizontal" Grid.Row="8" Grid.Column="1" Margin="2">
				<Button Command="{Binding OKCommand}" Content="{Binding OKButtonLabel}"></Button>
				<Button Command="{Binding CancelCommand}" Content="{Binding CancelButtonLabel}"></Button>
			</StackPanel>
		</Grid>
	</ScrollViewer>
</lib:EditControl>