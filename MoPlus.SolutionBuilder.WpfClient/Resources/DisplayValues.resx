<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Colon" xml:space="preserve">
    <value>:</value>
  </data>
  <data name="FileFilter_CodeTemplates" xml:space="preserve">
    <value>Mo+ Code Template Documents (.mpt)|*.mpt</value>
  </data>
  <data name="FileFilter_Images" xml:space="preserve">
    <value>Images (.png,*.jpg,*.gif,*.ico)|.png;*.jpg;*.gif;*.ico</value>
  </data>
  <data name="FileFilter_SpecTemplates" xml:space="preserve">
    <value>Mo+ Spec Template Documents (.mps)|*.mps</value>
  </data>
  <data name="FileFilter_XmlFiles" xml:space="preserve">
    <value>XML Documents (.xml)|*.xml</value>
  </data>
  <data name="Find_AllDocuments" xml:space="preserve">
    <value>All Documents</value>
  </data>
  <data name="Find_ButtonFindNext" xml:space="preserve">
    <value>_Find Next</value>
  </data>
  <data name="Find_ButtonReplace" xml:space="preserve">
    <value>_Replace</value>
  </data>
  <data name="Find_ButtonReplaceAll" xml:space="preserve">
    <value>Replace _All</value>
  </data>
  <data name="Find_CaseSensitive" xml:space="preserve">
    <value>Case Sensitive</value>
  </data>
  <data name="Find_CurrentDocument" xml:space="preserve">
    <value>Current Document</value>
  </data>
  <data name="Find_FindAndReplace" xml:space="preserve">
    <value>Find And Replace</value>
  </data>
  <data name="Find_FindTab" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="Find_Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="Find_ReplaceTab" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="Find_ReplaceWith" xml:space="preserve">
    <value>Replace with</value>
    <comment>add colon</comment>
  </data>
  <data name="Find_SearchIn" xml:space="preserve">
    <value>Search in</value>
    <comment>add colon</comment>
  </data>
  <data name="Find_SearchUp" xml:space="preserve">
    <value>Search Up</value>
  </data>
  <data name="Find_TextToFind" xml:space="preserve">
    <value>Text to Find</value>
    <comment>add colon</comment>
  </data>
  <data name="Find_UseRegEx" xml:space="preserve">
    <value>Regular Expression</value>
  </data>
  <data name="Find_UseWildcards" xml:space="preserve">
    <value>Wildcards</value>
  </data>
  <data name="Find_WholeWord" xml:space="preserve">
    <value>Match Whole Word</value>
  </data>
  <data name="Message_CloseCaption" xml:space="preserve">
    <value>Close Item</value>
    <comment>For closing items</comment>
  </data>
  <data name="Message_CloseItemConfirmation" xml:space="preserve">
    <value>Are you sure you want to close this item that has outstanding changes?</value>
    <comment>For closing items</comment>
  </data>
  <data name="Message_ClosingItemEnd" xml:space="preserve">
    <value> that has outstanding changes?</value>
    <comment>Closing item end</comment>
  </data>
  <data name="Message_ClosingItemIntro" xml:space="preserve">
    <value>Are you sure you want to close the tab </value>
    <comment>Closing item intro</comment>
  </data>
  <data name="Message_ClosingSolutionCaption" xml:space="preserve">
    <value>Close Solution</value>
    <comment>Closing solution message</comment>
  </data>
  <data name="Message_ClosingSolutionEnd" xml:space="preserve">
    <value>has been cancelled since there are open tabs for the solution.</value>
    <comment>Closing solution message</comment>
  </data>
  <data name="Message_ClosingSolutionIntro" xml:space="preserve">
    <value>The closing of solution </value>
    <comment>Closing solution message</comment>
  </data>
  <data name="Message_DeleteItemConfirmation" xml:space="preserve">
    <value>Are you sure you want to delete this item?</value>
    <comment>For confirming delete of items.</comment>
  </data>
  <data name="Message_DeleteItemConfirmationCaption" xml:space="preserve">
    <value>Delete Confirmation</value>
    <comment>For confirming delete of items.</comment>
  </data>
  <data name="Message_DeleteSelectedItem" xml:space="preserve">
    <value>Are you sure you want to delete the selected item from the model?</value>
    <comment>For confirming delete of items.</comment>
  </data>
  <data name="Message_DeleteSelectedItems" xml:space="preserve">
    <value>Are you sure you want to delete all of the selected items from the model?</value>
    <comment>For confirming delete of items.</comment>
  </data>
  <data name="Message_DropDuplicate" xml:space="preserve">
    <value> could not be dropped.  An item of the same name was found at the drop target.  Please try again with a different drag source or drop target.</value>
    <comment>For drag and drop issues.</comment>
  </data>
  <data name="Message_DropFromOtherSolution" xml:space="preserve">
    <value>Dropping an item from another solution onto the diagram is not supported at this time.  Please drop items from other solutions into the model tree view first.</value>
    <comment>For drag and drop from another solution issue.</comment>
  </data>
  <data name="Message_DropNotAllowed" xml:space="preserve">
    <value> could not be dropped.  In order to copy, the drop target must be of the same type as the drag source, or the immediate parent to an item of the same type.</value>
    <comment>For drag and drop issues.</comment>
  </data>
  <data name="Message_DuplicateSolutions" xml:space="preserve">
    <value>You have opened a solution with the same SolutionID as an existing open solution.  This may cause unexpected results when editing.  Please close one of these solutions before editing.</value>
  </data>
  <data name="Message_ForceClosingItemEnd" xml:space="preserve">
    <value> has outstanding edits and must be closed.  Do you want to save the changes?</value>
    <comment>Closing item end</comment>
  </data>
  <data name="Message_ForceClosingItemIntro" xml:space="preserve">
    <value>The tab </value>
    <comment>Closing item intro</comment>
  </data>
  <data name="Message_IssueCaption" xml:space="preserve">
    <value>Issue</value>
    <comment>For showing issues</comment>
  </data>
  <data name="Message_LoseEdits" xml:space="preserve">
    <value>You have edited this item.  OK to lose changes?</value>
    <comment>For losing edit prompts</comment>
  </data>
  <data name="Message_QuestionMarkEnd" xml:space="preserve">
    <value>?</value>
  </data>
  <data name="Message_SaveCaption" xml:space="preserve">
    <value>Save Item</value>
    <comment>For saving items</comment>
  </data>
  <data name="Message_SaveSolutionCaption" xml:space="preserve">
    <value>Save Solution</value>
    <comment>For saving solutions</comment>
  </data>
  <data name="Message_SaveSolutionChangesAbortEnd" xml:space="preserve">
    <value>?  Cancel will abort closing the solution.</value>
    <comment>For saving solutions</comment>
  </data>
  <data name="Message_SaveSolutionChangesLostEnd" xml:space="preserve">
    <value>?  Changes will be lost if you don't save.</value>
    <comment>For saving solutions</comment>
  </data>
  <data name="Message_SaveSolutionFilter" xml:space="preserve">
    <value>XML files (*.xml)|*.xml</value>
    <comment>For saving solutions</comment>
  </data>
  <data name="Message_SaveSolutionIntro" xml:space="preserve">
    <value>Do you want to save the solution </value>
    <comment>For saving solutions</comment>
  </data>
  <data name="Message_Solution" xml:space="preserve">
    <value>Solution </value>
    <comment>For closing solutions</comment>
  </data>
  <data name="Message_SolutionClosed" xml:space="preserve">
    <value> is closed.</value>
    <comment>For closing solutions</comment>
  </data>
  <data name="Message_SolutionFileExtension" xml:space="preserve">
    <value>xml</value>
    <comment>For saving solutions</comment>
  </data>
  <data name="Message_SolutionFileMustBeSaved" xml:space="preserve">
    <value>The solution must be saved to a file before generating code, please save and try again.</value>
    <comment>For indicating a solution file must be saved</comment>
  </data>
  <data name="Status_Ready" xml:space="preserve">
    <value>Ready</value>
    <comment>Ready status</comment>
  </data>
  <data name="Thread_ThreadBusy" xml:space="preserve">
    <value>You must wait for the {0} job to complete prior to starting a new job.</value>
    <comment>For showing the thread busy message</comment>
  </data>
</root>