<CONFIG>
	NAME VMBLLMediatorMessageSinkAttributeFile
	CATEGORY VMBLL
	NODE Project
	TOPLEVEL False
</CONFIG>
<CONTENT>
<%%=USETABS false%%>
<%%-/*<copyright>
%%>
<%%=Solution.Copyright%%><%%-

Code written by Marlon Grech and Josh Smith, available at the MVVM Foundation (http://mvvmfoundation.codeplex.com/)
</copyright>*/
using System;

namespace %%><%%=Namespace%%><%%-.Messaging
{
	///--------------------------------------------------------------------------------
	/// <summary>
	/// Attribute to decorate a method to be registered to the Mediator
	/// </summary>
	///
	/// This library code was generated from a template.  Change the
	/// Status value below to something other than Generated if you have
	/// customized this file to prevent changes from being overwritten.
	///
	/// <CreatedByUserName>%%><%%=USER%%><%%-</CreatedByUserName>
	/// <CreatedDate>%%><%%=NOW%%><%%-</CreatedDate>
	/// <Status>Generated</Status>
	///--------------------------------------------------------------------------------
	[AttributeUsage(AttributeTargets.Method)]
	public class MediatorMessageSinkAttribute : Attribute
	{
		/// <summary>
		/// The message to register to 
		/// </summary>
		public string Message { get; private set; }
		
		/// <summary>
		/// The type of parameter for the Method
		/// </summary>
		public Type ParameterType { get; set; }
		
		/// <summary>
		/// Constructs a method
		/// </summary>
		/// <param name="message">The message to subscribe to</param>
		public MediatorMessageSinkAttribute(string message)
		{
			Message = message;
		}
	}
}
%%></CONTENT><OUTPUT>
<%%:
if (File(VMBLLMediatorMessageSinkAttributeFilePath) == null || (File(VMBLLMediatorMessageSinkAttributeFilePath).Contains("<Status>Generated</Status>") == true && File(VMBLLMediatorMessageSinkAttributeFilePath).Filter("<CreatedByUserName>","</CreatedDate>") != Text.Filter("<CreatedByUserName>","</CreatedDate>")))
{
	update(VMBLLMediatorMessageSinkAttributeFilePath)
}
%%></OUTPUT>