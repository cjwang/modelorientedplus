<CONFIG>
	NAME BLLOnlyClassPropertiesCode
	CATEGORY BLLOnly
	NODE Entity
	TOPLEVEL False
</CONFIG>
<CONTENT>
<%%=USETABS true%%>
<%%:
var namePropertyCreated = false
if (BLLClassName == "Solution")
{
	<%%-
	#region "Interpreter"%%>
	foreach (Entity in Solution where BLLClassName != "Project" && (IsSolutionModelEntity == true || IsSpecModelEntity == true))
	{
		<%%-
		
		///--------------------------------------------------------------------------------
		/// <summary>This property gets or sets the Current%%><%%=BLLClassName%%><%%-.</summary>
		///--------------------------------------------------------------------------------
		[XmlIgnore]
		public %%><%%=BLLClassName%%><%%- Current%%><%%=BLLClassName%%><%%- { get; set; }%%>
	}
	<%%-
	#endregion "Interpreter"
	%%>
}
<%%-
#region "Validation"
///--------------------------------------------------------------------------------
/// <summary>This method returns validation errors for the input item.</param>
/// 
/// <returns>Validation errors (null by default).</returns>
///--------------------------------------------------------------------------------
public %%>
if (BaseEntity == null)
{
	<%%-virtual %%>
}
else
{
	<%%-override %%>
}
<%%-string GetValidationErrors()
{%%><%%=TAB 1%%><%%-
	StringBuilder errors = new StringBuilder();
	string error = null;
	%%>
	foreach (Entity in EntityAndBaseEntities)
	{
		foreach (Property where IsPrimaryKeyMember == false && Tags.Contains("NoValidation") == false)
		{
	<%%-
	error = GetValidationError("%%><%%=BLLPropertyName%%><%%-");
	if (!String.IsNullOrEmpty(error))
	{%%><%%=TAB 1%%><%%-
		errors.Append("\r\n").Append(error);%%><%%=TAB -1%%><%%-
	}%%>
		}
	}
<%%-

	return errors.ToString();%%><%%=TAB -1%%><%%-
}

///--------------------------------------------------------------------------------
/// <summary>This method returns a validation error for the input property.</param>
/// 
/// <param name="fieldName">The name of the property.</param>
/// <returns>Validation error (null by default).</returns>
///--------------------------------------------------------------------------------
public override string GetValidationError(string fieldName)
{%%><%%=TAB 1%%><%%-
	if (this.GetFieldInfo(fieldName) == null && this.GetPropertyInfo(fieldName) == null) return null;

	string error = null;

	switch (fieldName)
	{%%><%%=TAB 1%%>
	foreach (Entity in EntityAndBaseEntities)
	{
		foreach (Property where IsPrimaryKeyMember == false && Tags.Contains("NoValidation") == false)
		{
		<%%-
		case "%%><%%=BLLFieldName%%><%%-":
		case "%%><%%=BLLPropertyName%%><%%-":%%><%%=TAB 1%%><%%-
			error = Validate%%><%%=BLLPropertyName%%><%%-();
			break;%%><%%=TAB -1%%>
		}
	}
		<%%-
		default:%%><%%=TAB 1%%><%%-
			break;%%><%%=TAB -2%%><%%-
	}

	return error;%%><%%=TAB -1%%><%%-
}%%>
foreach (Property where IsPrimaryKeyMember == false && Tags.Contains("NoValidation") == false)
{
<%%-

///--------------------------------------------------------------------------------
/// <summary>This method validates %%><%%=BLLPropertyName%%><%%- and returns an error message if not valid.</param>
///--------------------------------------------------------------------------------
public string Validate%%><%%=BLLPropertyName%%><%%-()
{%%><%%=TAB 1%%>
	switch (DataTypeCode)
	{
		case 1: // SByte
		case 2: // IntShort
		case 3: // Int
		case 4: // IntLong
		case 6: // UIntShort
		case 7: // UInt
		case 8: // UIntLong
		case 21: // IntTiny
		case 22: // UIntTiny
			if (Tags.Contains("MinusOneOrMore") == true)
			{
	<%%-
	if (%%><%%=BLLPropertyName%%><%%- < -1 || %%><%%=BLLPropertyName%%><%%- == 0)
	{%%><%%=TAB 1%%><%%-
		return String.Format(Resources.DisplayValues.Validation_ZeroOrMoreValue, "%%><%%=BLLPropertyName%%><%%-");%%><%%=TAB -1%%><%%-
	}%%>
			}
			else if (Tags.Contains("ZeroOrMore") == true)
			{
	<%%-
	if (%%><%%=BLLPropertyName%%><%%- < 0)
	{%%><%%=TAB 1%%><%%-
		return String.Format(Resources.DisplayValues.Validation_MinusOneOrMoreValue, "%%><%%=BLLPropertyName%%><%%-");%%><%%=TAB -1%%><%%-
	}%%>
			}
			else if (IsNullable == true)
			{
	<%%-
	if (%%><%%=BLLPropertyName%%><%%- != null && %%><%%=BLLPropertyName%%><%%- < 0)
	{%%><%%=TAB 1%%><%%-
		return String.Format(Resources.DisplayValues.Validation_NonNegativeNumericValue, "%%><%%=BLLPropertyName%%><%%-");%%><%%=TAB -1%%><%%-
	}%%>
			}
			else
			{
	<%%-
	if (%%><%%=BLLPropertyName%%><%%- <= 0)
	{%%><%%=TAB 1%%><%%-
		return String.Format(Resources.DisplayValues.Validation_PositiveNumericValue, "%%><%%=BLLPropertyName%%><%%-");%%><%%=TAB -1%%><%%-
	}%%>
			}
			break
		case 16: // String
		case 17: // StringUnicode
		case 19: // Text
		case 20: // TextUnicode
			if (Tags.Contains("ValidateDB") == true)
			{
				if (IsNullable == false)
				{
	<%%-
	if (String.IsNullOrEmpty(%%><%%=BLLPropertyName%%><%%-))
	{%%><%%=TAB 1%%><%%-
		return String.Format(Resources.DisplayValues.Validation_%%><%%=BLLPropertyName%%><%%-, "%%><%%=BLLPropertyName%%><%%-");%%><%%=TAB -1%%><%%-
	}%%>
				}
			}
			else if (BLLPropertyName.EndsWith("ServerName") == true)
			{
	<%%-
	if (%%>		
				if (IsNullable == true)
				{
					<%%-!String.IsNullOrEmpty(%%><%%=BLLPropertyName%%><%%-) && %%>
				}
	<%%-!Regex.IsMatch(%%><%%=BLLPropertyName%%><%%-, Resources.DisplayValues.Regex_PathName))
	{%%><%%=TAB 1%%><%%-
		return String.Format(Resources.DisplayValues.Validation_PathNameValue, "%%><%%=BLLPropertyName%%><%%-");%%><%%=TAB -1%%><%%-
	}%%>
			}
			else if (Entity.BLLNamePropertyName == BLLPropertyName && Tags.Contains("LooseName") == false && Tags.Contains("AnyChars") == false)
			{
	<%%-
	if (%%>		
				if (IsNullable == true)
				{
					<%%-!String.IsNullOrEmpty(%%><%%=BLLPropertyName%%><%%-) && %%>
				}
	<%%-!Regex.IsMatch(%%><%%=BLLPropertyName%%><%%-, Resources.DisplayValues.Regex_Name))
	{%%><%%=TAB 1%%><%%-
		return String.Format(Resources.DisplayValues.Validation_AlphanumericValue, "%%><%%=BLLPropertyName%%><%%-");%%><%%=TAB -1%%><%%-
	}%%>
			}
			else if (BLLPropertyName.EndsWith("Name") == true && Tags.Contains("AnyChars") == false)
			{
	<%%-
	if (%%>		
				if (IsNullable == true)
				{
					<%%-!String.IsNullOrEmpty(%%><%%=BLLPropertyName%%><%%-) && %%>
				}
	<%%-!Regex.IsMatch(%%><%%=BLLPropertyName%%><%%-, Resources.DisplayValues.Regex_LooseName))
	{%%><%%=TAB 1%%><%%-
		return String.Format(Resources.DisplayValues.Validation_LooseNameValue, "%%><%%=BLLPropertyName%%><%%-");%%><%%=TAB -1%%><%%-
	}%%>
			}
			else if (BLLPropertyName.EndsWith("Path") == true && Tags.Contains("AnyChars") == false)
			{
	<%%-
	if (%%>		
			if (IsNullable == true)
				{
					<%%-!String.IsNullOrEmpty(%%><%%=BLLPropertyName%%><%%-) && %%>
				}
	<%%-!Regex.IsMatch(%%><%%=BLLPropertyName%%><%%-, Resources.DisplayValues.Regex_FilePath))
	{%%><%%=TAB 1%%><%%-
		return String.Format(Resources.DisplayValues.Validation_PathValue, "%%><%%=BLLPropertyName%%><%%-");%%><%%=TAB -1%%><%%-
	}%%>
			}
			else if (IsNullable == false)
			{
	<%%-
	if (String.IsNullOrEmpty(%%><%%=BLLPropertyName%%><%%-))
	{%%><%%=TAB 1%%><%%-
		return String.Format(Resources.DisplayValues.Validation_NullValue, "%%><%%=BLLPropertyName%%><%%-");%%><%%=TAB -1%%><%%-
	}%%>
			}
			break
		case 26: // Guid
			if (IsNullable == false)
			{
	<%%-
	if (%%><%%=BLLPropertyName%%><%%- == Guid.Empty)
	{%%><%%=TAB 1%%><%%-
		return String.Format(Resources.DisplayValues.Validation_SelectedValue, "%%><%%=BLLPropertyName%%><%%-");%%><%%=TAB -1%%><%%-
	}%%>
			}
			break
		default:
			break
	}
	if (Tags.Contains("CustomValidation") == true)
	{
	<%%-
	#region protected
	#endregion protected%%>
	}
	<%%-
	return null;%%><%%=TAB -1%%><%%-
}%%>
}
<%%-

#endregion "Validation"

#region "Fields and Properties"

private %%><%%=BLLClassName%%><%%- _forwardInstance = null;
///--------------------------------------------------------------------------------
/// <summary>This property gets the forward engineering instance.</summary>
///--------------------------------------------------------------------------------
[XmlIgnore]
public%%>
if (BaseEntity != null)
{
	<%%- new%%>
}
<%%- %%><%%=BLLClassName%%><%%- ForwardInstance
{%%><%%=TAB 1%%><%%-
	get
	{%%><%%=TAB 1%%><%%-
		return _forwardInstance;%%><%%=TAB -1%%><%%-
	}
	set
	{%%><%%=TAB 1%%><%%-
		_forwardInstance = value;%%><%%=TAB -1%%><%%-
	}%%><%%=TAB -1%%><%%-
}

private %%><%%=BLLClassName%%><%%- _reverseInstance = null;
///--------------------------------------------------------------------------------
/// <summary>This property gets the reverse engineering instance.</summary>
///--------------------------------------------------------------------------------
[XmlIgnore]
public new %%><%%=BLLClassName%%><%%- ReverseInstance
{%%><%%=TAB 1%%><%%-
	get
	{%%><%%=TAB 1%%><%%-
		return _reverseInstance;%%><%%=TAB -1%%><%%-
	}
	set
	{%%><%%=TAB 1%%><%%-
		_reverseInstance = value;
		base.ReverseInstance = value;%%><%%=TAB -1%%><%%-
	}%%><%%=TAB -1%%><%%-
}%%>

foreach (Property where IsPrimaryKeyMember == true && DataTypeCode == 26 /* Guid */ limit 1)
{
<%%-

///--------------------------------------------------------------------------------
/// <summary>This property gets/sets the ID of the instance.</summary>
///--------------------------------------------------------------------------------
[XmlIgnore]
public override Guid ID
{%%><%%=TAB 1%%><%%-
	get
	{%%><%%=TAB 1%%><%%-
		return %%><%%=BLLPropertyName%%><%%-;%%><%%=TAB -1%%><%%-
	}
	set
	{%%><%%=TAB 1%%><%%-
		%%><%%=BLLPropertyName%%><%%- = value;%%><%%=TAB -1%%><%%-
	}%%><%%=TAB -1%%><%%-
}%%>
}
if (Tags.Contains("Source") == false)
{
	foreach (Property where PropertyName.EndsWith("Name") == true && (DataTypeCode == 16  || DataTypeCode == 17 /* string */) limit 1)
	{
		namePropertyCreated = true
<%%-

///--------------------------------------------------------------------------------
/// <summary>This property gets/sets the name of the instance.</summary>
///--------------------------------------------------------------------------------
[XmlIgnore]
public override string Name
{%%><%%=TAB 1%%><%%-
	get
	{%%><%%=TAB 1%%><%%-
		return %%><%%=BLLPropertyName%%><%%-;%%><%%=TAB -1%%><%%-
	}
	set
	{%%><%%=TAB 1%%><%%-
		%%><%%=BLLPropertyName%%><%%- = value;%%><%%=TAB -1%%><%%-
	}%%><%%=TAB -1%%><%%-
}

///--------------------------------------------------------------------------------
/// <summary>This property gets the OriginalName.</summary>
///--------------------------------------------------------------------------------
[XmlIgnore]
public string OriginalName
{%%><%%=TAB 1%%><%%-
	get
	{%%><%%=TAB 1%%><%%-
		return Source%%><%%=../BLLClassName%%><%%-.%%><%%=BLLPropertyName%%><%%-;%%><%%=TAB -1%%><%%-
	}%%><%%=TAB -1%%><%%-
}%%>
	}
}
if (namePropertyCreated == true)
{
<%%-

protected string _displayName = null;
///--------------------------------------------------------------------------------
/// <summary>This property gets or sets the display name.</summary>
///--------------------------------------------------------------------------------
[XmlIgnore]
public string DisplayName
{%%><%%=TAB 1%%><%%-
	get
	{%%><%%=TAB 1%%>
		if (BLLNamePropertyName != null && Tags.Contains("Template") == false)
		{
		<%%-
		if (_displayName == null)
		{%%><%%=TAB 1%%>
			if (BLLParentNamePropertyName != null)
			{
			<%%-
			if (!String.IsNullOrEmpty(%%><%%=BLLParentNamePropertyName%%><%%-))
			{%%><%%=TAB 1%%><%%-
				_displayName = %%><%%=BLLParentNamePropertyName%%><%%- + "." + %%><%%=BLLNamePropertyName%%><%%-;%%><%%=TAB -1%%><%%-
			}
			else
			{%%><%%=TAB 1%%><%%-
				_displayName = %%><%%=BLLNamePropertyName%%><%%-;%%><%%=TAB -1%%><%%-
			}%%>
			}
			else
			{
			<%%-
			_displayName = %%><%%=BLLNamePropertyName%%><%%-;%%>
			}
		<%%=TAB -1%%><%%-
		}%%>
		}
		<%%-
		
		#region protected
		#endregion protected
		
		return _displayName;%%><%%=TAB -1%%><%%-
	}
	set
	{%%><%%=TAB 1%%><%%-
		_displayName = value;%%><%%=TAB -1%%><%%-
	}%%><%%=TAB -1%%><%%-
}%%>
}
<%%-

private string _defaultSourceName;
///--------------------------------------------------------------------------------
/// <summary>This property gets the default source name.</summary>
///--------------------------------------------------------------------------------
[XmlIgnore]
public%%>
if (BaseEntity == null)
{
	<%%- virtual%%>
}
else
{
	<%%- override%%>
}
<%%- string DefaultSourceName
{%%><%%=TAB 1%%><%%-
	get
	{%%><%%=TAB 1%%>
		if (BLLNamePropertyName != null)
		{
		<%%-
		if (_defaultSourceName == null)
		{%%><%%=TAB 1%%>
			if (BLLParentReferencePropertyName != null && BLLParentReferencePropertyName != "Solution")
			{
			<%%-
			if (%%><%%=BLLParentReferencePropertyName%%><%%- != null)
			{%%><%%=TAB 1%%><%%-
				_defaultSourceName = %%><%%=BLLParentReferencePropertyName%%><%%-.DefaultSourceName + "." + DefaultSourcePrefix + Source%%><%%=BLLClassName%%><%%-.%%><%%=BLLNamePropertyName%%><%%-;%%><%%=TAB -1%%><%%-
			}
			else
			{%%><%%=TAB 1%%><%%-
				_defaultSourceName = DefaultSourcePrefix + Source%%><%%=BLLClassName%%><%%-.%%><%%=BLLNamePropertyName%%><%%-;%%><%%=TAB -1%%><%%-
			}%%>
			}
			else
			{
			<%%-
			_defaultSourceName = DefaultSourcePrefix + Source%%><%%=BLLClassName%%><%%-.%%><%%=BLLNamePropertyName%%><%%-;%%>
			}
		<%%=TAB -1%%><%%-
		}%%>
		}
		<%%-
		
		#region protected
		#endregion protected

		return _defaultSourceName;%%><%%=TAB -1%%><%%-
	}%%><%%=TAB -1%%><%%-
}

///--------------------------------------------------------------------------------
/// <summary>This property gets the source method, which may be the reverse instance
/// (to get original values, etc.).</summary>
///--------------------------------------------------------------------------------
[XmlIgnore]
public %%><%%=BLLClassName%%><%%- Source%%><%%=BLLClassName%%><%%-
{%%><%%=TAB 1%%><%%-
	get
	{%%><%%=TAB 1%%><%%-
		if (ReverseInstance != null)
		{%%><%%=TAB 1%%><%%-
			return ReverseInstance;%%><%%=TAB -1%%><%%-
		}
		return this;%%><%%=TAB -1%%><%%-
	}%%><%%=TAB -1%%><%%-
}
%%>
foreach (Property where IsPrimaryKeyMember == true || IsForeignKeyMember == true)
{
	if (IsPrimaryKeyMember == false || ../BaseEntity == null)
	{
<%%-
///--------------------------------------------------------------------------------
/// <summary>This property gets/sets the Old%%><%%=BLLPropertyName%%><%%- of the instance.</summary>
///--------------------------------------------------------------------------------
[XmlIgnore]
public %%><%%=BLLDataType%%><%%- Old%%><%%=BLLPropertyName%%><%%- { get; set; }
%%>
	}
}
var solutionPropertyFound = false
if (BLLClassName == "Solution")
{
	solutionPropertyFound = true
}
else
{
	foreach (EntityReference)
	{
		if (BLLPropertyName == "Solution")
		{
			solutionPropertyFound = true
			break
		}
	}
}
if (solutionPropertyFound == false && BaseEntity == null)
{
<%%-
private Solutions.Solution _solution;
///--------------------------------------------------------------------------------
/// <summary>This property gets or sets the Solution.</summary>
///--------------------------------------------------------------------------------
[XmlIgnore]
public Solutions.Solution Solution
{%%><%%=TAB 1%%><%%-
	get
	{%%><%%=TAB 1%%><%%-
		return _solution;%%><%%=TAB -1%%><%%-
	}
	set
	{%%><%%=TAB 1%%><%%-
		_solution = value;%%><%%=TAB -1%%><%%-
	}%%><%%=TAB -1%%><%%-
}%%>
}

foreach (Property)
{
	if (IsAuditProperty == false && IsBaseProperty == false)
	{
		<%%=BLLPropertyCode%%>
	}
}
foreach (PropertyReference)
{
	if (IsAuditProperty == false && IsBaseProperty == false)
	{
		<%%=BLLPropertyCode%%>
	}
}
foreach (Collection sort Order) // TODO: shouldn't have to sort here, investigate...
{
	if (IsBaseProperty == false)
	{
		<%%=BLLOnlyPropertyCode%%>
	}
}
foreach (EntityReference)
{
	if (IsBaseProperty == false)
	{
		<%%=BLLOnlyPropertyCode%%>
	}
}
if (BaseEntity == null)
{
	<%%-
	
	///-------------------------------------------------------------------------------
	/// <summary>This property gets the primary key properties.</summary>
	///--------------------------------------------------------------------------------
	[XmlIgnore]
	[DefaultValue(DefaultValue.StringStr)]
	public override string PrimaryKeyProperties
	{%%><%%=TAB 1%%><%%-
		get
		{%%><%%=TAB 1%%><%%-
			return "%%>
		foreach (Property where IsPrimaryKeyMember == true)
		{
			if (ItemIndex > 0)
			{
				<%%-, %%>
			}
			<%%=BLLPropertyName%%>
		}
			<%%-";%%><%%=TAB -1%%><%%-
		}%%><%%=TAB -1%%><%%-
	}
	
	///--------------------------------------------------------------------------------
	/// <summary>This property gets or sets the primary key values.</summary>
	///--------------------------------------------------------------------------------
	[XmlIgnore]
	[DefaultValue(DefaultValue.StringStr)]
	public override string PrimaryKeyValues
	{%%><%%=TAB 1%%><%%-
		get
		{%%><%%=TAB 1%%><%%-
			return %%>
			foreach  (Property where IsPrimaryKeyMember == true)
			{
				if (ItemIndex > 0)
				{
					<%%- + ", " + %%>
				}
				<%%=BLLPropertyName%%><%%-.GetString()%%>
			}
			<%%=TAB -1%%><%%-;
		}
		set
		{%%><%%=TAB 1%%><%%-
			string[] primaryKeyValues = value.Split(',');
			if (primaryKeyValues.Length > 0)
			{%%><%%=TAB 1%%>
		foreach (Property where IsPrimaryKeyMember == true)
		{
			<%%-
			%%><%%=BLLPropertyName%%><%%- = primaryKeyValues[%%><%%=ItemIndex%%><%%-]%%><%%=GetDataHelperGetMethod%%><%%-;%%>
		}
			<%%=TAB -1%%><%%-
			}%%><%%=TAB -1%%><%%-
		}%%><%%=TAB -1%%><%%-
	}%%>
}
%%>
<%%-

///--------------------------------------------------------------------------------
/// <summary>This property determines if the data has been modified since the
/// last load from a resource such as a database.</summary>
///--------------------------------------------------------------------------------
[XmlIgnore]
[DefaultValue(DefaultValue.Bool)]
public override bool IsModified
{%%><%%=TAB 1%%><%%-
	get
	{%%><%%=TAB 1%%><%%-
		if (base.IsModified == true) return true;
		if (_isModified == true) return true;%%>
<%%:
	foreach (Collection where ReferencedEntity.Tags.Contains("Template") == false)
	{
		<%%-
		if (%%><%%=BLLFieldName%%><%%- != null && %%><%%=BLLFieldName%%><%%-.IsModified == true) return true;%%>
	}
%%>
<%%-
		return false;%%><%%=TAB -1%%><%%-
	}%%><%%=TAB -1%%><%%-
}

#region protected
#endregion protected

#endregion "Fields and Properties"%%></CONTENT>